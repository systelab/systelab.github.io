{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/footer/footer.component.css","webpack:///./src/app/common/footer/footer.component.html","webpack:///./src/app/common/footer/footer.component.ts","webpack:///./src/app/common/navbar/navbar.component.html","webpack:///./src/app/common/navbar/navbar.component.scss","webpack:///./src/app/common/navbar/navbar.component.ts","webpack:///./src/app/components/project-combobox.component.ts","webpack:///./src/app/components/release-combobox.component.ts","webpack:///./src/app/components/test-cycle-combobox.component.ts","webpack:///./src/app/components/test-group-combobox.component.ts","webpack:///./src/app/components/test-plan-combobox.component.ts","webpack:///./src/app/features/help/help.component.html","webpack:///./src/app/features/help/help.component.ts","webpack:///./src/app/features/login/login-dialog.component.html","webpack:///./src/app/features/login/login-dialog.component.ts","webpack:///./src/app/features/report/labels/test-label.component.html","webpack:///./src/app/features/report/labels/test-label.component.ts","webpack:///./src/app/features/report/links/test-link.component.html","webpack:///./src/app/features/report/links/test-link.component.ts","webpack:///./src/app/features/report/steps/test-steps.component.html","webpack:///./src/app/features/report/steps/test-steps.component.scss","webpack:///./src/app/features/report/steps/test-steps.component.ts","webpack:///./src/app/features/report/summary/test-summary-table.component.css","webpack:///./src/app/features/report/summary/test-summary-table.component.html","webpack:///./src/app/features/report/summary/test-summary-table.component.ts","webpack:///./src/app/features/reporter/reporter-dialog.component.html","webpack:///./src/app/features/reporter/reporter-dialog.component.scss","webpack:///./src/app/features/reporter/reporter-dialog.component.ts","webpack:///./src/app/jama/api.module.ts","webpack:///./src/app/jama/api/abstractitems.service.ts","webpack:///./src/app/jama/api/activities.service.ts","webpack:///./src/app/jama/api/api.ts","webpack:///./src/app/jama/api/attachments.service.ts","webpack:///./src/app/jama/api/baselines.service.ts","webpack:///./src/app/jama/api/comments.service.ts","webpack:///./src/app/jama/api/files.service.ts","webpack:///./src/app/jama/api/filters.service.ts","webpack:///./src/app/jama/api/items.service.ts","webpack:///./src/app/jama/api/itemtypes.service.ts","webpack:///./src/app/jama/api/picklistoptions.service.ts","webpack:///./src/app/jama/api/picklists.service.ts","webpack:///./src/app/jama/api/projects.service.ts","webpack:///./src/app/jama/api/relationships.service.ts","webpack:///./src/app/jama/api/relationshiptypes.service.ts","webpack:///./src/app/jama/api/releases.service.ts","webpack:///./src/app/jama/api/system.service.ts","webpack:///./src/app/jama/api/tags.service.ts","webpack:///./src/app/jama/api/testcycles.service.ts","webpack:///./src/app/jama/api/testplans.service.ts","webpack:///./src/app/jama/api/testruns.service.ts","webpack:///./src/app/jama/api/usergroups.service.ts","webpack:///./src/app/jama/api/users.service.ts","webpack:///./src/app/jama/configuration.ts","webpack:///./src/app/jama/index.ts","webpack:///./src/app/jama/rxjs-operators.ts","webpack:///./src/app/jama/variables.ts","webpack:///./src/app/model/project-data.model.ts","webpack:///./src/app/model/release-data.model.ts","webpack:///./src/app/model/testcycle-data.model.ts","webpack:///./src/app/model/testgroup-data.model.ts","webpack:///./src/app/model/testplan-data.model.ts","webpack:///./src/app/service/test-case.service.ts","webpack:///./src/app/service/test-suite.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"d-flex flex-column w-100\\\">\\r\\n\\r\\n\\t<app-navbar #navbar\\r\\n\\t\\t[(toggleResults)]=\\\"showResults\\\"\\r\\n\\t\\t[(toggleSummary)]=\\\"showSummary\\\"\\r\\n\\t\\t(user)=\\\"doShowUser(true)\\\"\\r\\n\\t\\t(report)=\\\"doShowReport(true)\\\"\\r\\n\\t\\t[isLogged]=\\\"isLogged\\\"\\r\\n\\t\\t[allFilesProcessed]=\\\"allFilesProcessed\\\">\\r\\n\\t</app-navbar>\\r\\n\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<p></p>\\r\\n\\t\\t<file-drop *ngIf=\\\"!readingFiles()\\\" class=\\\"no-print\\\" (onFileDrop)=\\\"fileDrop($event)\\\">\\r\\n\\t\\t\\t<div class=\\\"text-center text-primary\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\" style=\\\"font-size:23px;\\\"></i>\\r\\n\\t\\t\\t\\t<p>Drop your allure files here</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</file-drop>\\r\\n\\r\\n\\t\\t<help *ngIf=\\\"testSuites.length===0\\\"></help>\\r\\n\\t\\t<ng-container *ngIf=\\\"showSummary && showResults\\\">\\r\\n\\t\\t\\t<test-summary-table [category]=\\\"'suite'\\\" [categoryName]=\\\"'Test Suite'\\\"></test-summary-table>\\r\\n\\t\\t\\t<test-summary-table [category]=\\\"'severity'\\\" [categoryName]=\\\"'Severity'\\\"></test-summary-table>\\r\\n\\t\\t\\t<test-summary-table [category]=\\\"'tag'\\\" [categoryName]=\\\"'Tag'\\\"></test-summary-table>\\r\\n\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t<div *ngFor=\\\"let testSuite of testSuites\\\">\\r\\n\\t\\t\\t<div class=\\\"pt-4 mb-1\\\">\\r\\n\\t\\t\\t\\t<i *ngIf=\\\"showResults && testSuiteService.getStatus(testSuite)==='passed'\\\" class=\\\"fa fa-check-circle-o\\\" style=\\\"font-size:33px;color:green;\\\"></i>\\r\\n\\t\\t\\t\\t<i *ngIf=\\\"showResults && testSuiteService.getStatus(testSuite)!=='passed'\\\" class=\\\"fa fa-times-circle-o\\\" style=\\\"font-size:33px;color:red;\\\"></i>\\r\\n\\t\\t\\t\\t<h2 class=\\\"d-inline\\\">{{testSuite.id}}</h2>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<p markdown>{{testSuite.name}}</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<p style=\\\"white-space: pre-line\\\" *ngIf=\\\"showResults\\\" markdown>{{testSuite.actualResults}}</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"showResults\\\">\\r\\n\\t\\t\\t\\t<test-label *ngFor=\\\"let label of testSuite.testCases[0].labels\\\" [label]=\\\"label\\\"></test-label>\\r\\n\\t\\t  </div>\\r\\n\\t\\t\\t<div class=\\\"pl-3\\\">\\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let test of testSuite.testCases; let j=index\\\">\\r\\n\\t\\t\\t\\t\\t<test-steps [steps]=\\\"test.steps\\\" [showResults]=\\\"showResults\\\" [action]=\\\"test.description\\\" [withHeader]=\\\"j===0\\\"></test-steps>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<app-footer class=\\\"no-print\\\"></app-footer>\\r\\n</div>\\r\\n\"","import { ChangeDetectorRef, Component, QueryList, ViewChildren, NgZone, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { FileSystemFileEntry, UploadEvent, UploadFile } from 'ngx-file-drop';\r\nimport { TestSummaryTableComponent } from './features/report/summary/test-summary-table.component';\r\nimport { ReporterDialog, ReporterDialogParameters } from './features/reporter/reporter-dialog.component';\r\nimport { LoginDialog, LoginDialogParameters } from './features/login/login-dialog.component';\r\nimport { DialogService } from 'systelab-components/widgets/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TestCaseService } from './service/test-case.service';\r\nimport { TestSuiteService } from './service/test-suite.service';\r\nimport { Step, TestCase, TestSuite } from './model/allure-test-case.model';\r\nimport { NavbarComponent } from './common/navbar/navbar.component';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n\tselector:    'app-root',\r\n\ttemplateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n\t@ViewChildren(TestSummaryTableComponent) public summaryList: QueryList<TestSummaryTableComponent>;\r\n\r\n\t@ViewChild('navbar') navbar: NavbarComponent\r\n\r\n\tpublic testSuites: TestSuite[] = [];\r\n\r\n\tpublic uploadingFiles: string[] = [];\r\n\r\n\tpublic showUser = false;\r\n\tpublic showReport = false;\r\n\r\n\tpublic username = '';\r\n\tpublic password = '';\r\n\tpublic filesProcessed = 0;\r\n\tpublic filesProcessedPercentage = 0;\r\n\tpublic filesDropped = 0;\r\n\r\n\tprivate _isLogged = false;\r\n\tget isLogged(): boolean {\r\n\t\treturn this._isLogged;\r\n\t}\r\n\r\n\tprivate _allFilesProcessed = false;\r\n\tget allFilesProcessed(): boolean {\r\n\t\treturn this._allFilesProcessed;\r\n\t}\r\n\r\n\tpublic server = environment.jamaUrl;\r\n\tpublic numberOfSteps = 1;\r\n\r\n\tprivate _showSummary = true;\r\n\tget showSummary(): boolean {\r\n\t\treturn this._showSummary;\r\n\t}\r\n\r\n\tset showSummary(show: boolean) {\r\n\t\tthis._showSummary = show;\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tprivate _showResults = true;\r\n\tget showResults(): boolean {\r\n\t\treturn this._showResults;\r\n\t}\r\n\r\n\tset showResults(show: boolean) {\r\n\t\tthis._showResults = show;\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tconstructor(private http: HttpClient, private ref: ChangeDetectorRef, protected dialogService: DialogService, protected testSuiteService: TestSuiteService, protected testCaseService: TestCaseService, private toastr: ToastrService, protected ngZone: NgZone) {\r\n\t}\r\n\r\n\tpublic fileDrop(event: UploadEvent) {\r\n\t\tconst files: UploadFile[] = event.files;\r\n\r\n\t\tthis._allFilesProcessed = false;\r\n\t\tthis.filesProcessed = 0;\r\n\t\tthis.filesDropped = files.length;\r\n\t\tthis.navbar.go(0);\r\n\r\n\t\tfor (const file of files) {\r\n\t\t\tconst fileEntry = file.fileEntry as FileSystemFileEntry;\r\n\t\t\tfileEntry.file(info => {\r\n\t\t\t\tthis.uploadingFiles.push(info.name);\r\n\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.onload = (e: any) => {\r\n\t\t\t\t\tif (info.name.endsWith('.json')) {\r\n\t\t\t\t\t\tconst testCase: TestCase = JSON.parse(e.target.result);\r\n\t\t\t\t\t\tthis.addTestCase(testCase);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (info.name.endsWith('.xml')) {\r\n\t\t\t\t\t\t\tconst parser: DOMParser = new DOMParser();\r\n\t\t\t\t\t\t\tconst xmlDoc: Document = parser.parseFromString(e.target.result, 'text/xml');\r\n\t\t\t\t\t\t\tconst newTestSuite = this.testSuiteService.parseFromDocument(xmlDoc);\r\n\t\t\t\t\t\t\tthis.addTestSuite(newTestSuite);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\treader.onloadend = (e: any) => {\r\n\t\t\t\t\tfor (let i = this.uploadingFiles.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tif (this.uploadingFiles[i] === info.name) {\r\n\t\t\t\t\t\t\tthis.uploadingFiles.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Step number must be incremental after the sorting\r\n\t\t\t\t\tthis.testSuites.forEach((suite) => {\r\n\t\t\t\t\t\tsuite.testCases.sort((a, b) => a.start < b.start ? -1 : a.start > b.start ? 1 : 0);\r\n\t\t\t\t\t\tthis.numberOfSteps = 1;\r\n\t\t\t\t\t\tsuite.testCases.forEach((testcase) => {\r\n\t\t\t\t\t\t\tthis.setNumberOfStep(testcase.steps);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.update();\r\n\r\n\t\t\t\t\tthis.ngZone.run(() => {\r\n\t\t\t\t\t\tthis.filesProcessed++;\r\n\t\t\t\t\t\tthis.filesProcessedPercentage = 100 * this.filesProcessed / this.filesDropped;\r\n\t\t\t\t\t\tthis._allFilesProcessed = this.filesProcessed === this.filesDropped;\r\n\t\t\t\t\t\tthis.navbar.go(this.filesProcessedPercentage);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsText(info);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic readingFiles() {\r\n\t\treturn this.filesProcessed !== this.filesDropped && this.filesDropped > 0;\r\n\t}\r\n\r\n\t// All the steps with Expected Result must have a step number\r\n\tprivate setNumberOfStep(steps: Step[]) {\r\n\t\tsteps.forEach(step => {\r\n\t\t\tstep.numberOfStep = this.numberOfSteps++;\r\n\t\t\tif (step.steps && step.steps.length > 0) {\r\n\t\t\t\tthis.setNumberOfStep(step.steps);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic update() {\r\n\t\tthis.ref.detectChanges();\r\n\t\tthis.summaryList.toArray()\r\n\t\t\t.forEach(summary => summary.setTests(this.testSuites));\r\n\t}\r\n\r\n\tprivate addTestCase(testCase: TestCase) {\r\n\t\tconst testSuiteId = this.testCaseService.getTmsLink(testCase);\r\n\t\tconst testSuiteName = this.testCaseService.getTmsDescription(testCase);\r\n\t\tconst testSuiteActualResults = this.testCaseService.getActualResults(testCase);\r\n\r\n\t\tif (testCase.steps && testCase.steps.length > 0) {\r\n\t\t\tconst testSuite = this.testSuites.find(ts => ts.id === testSuiteId);\r\n\t\t\tif (testSuite) {\r\n\t\t\t\tthis.testSuiteService.addTestCaseToTestSuite(testCase, testSuite);\r\n\t\t\t} else {\r\n\t\t\t\tconst newTestSuite = {\r\n\t\t\t\t\tid:        testSuiteId,\r\n\t\t\t\t\tname:      testSuiteName,\r\n\t\t\t\t\tactualResults: testSuiteActualResults,\r\n\t\t\t\t\ttestCases: []\r\n\t\t\t\t};\r\n\t\t\t\tthis.testSuiteService.addTestCaseToTestSuite(testCase, newTestSuite);\r\n\r\n\t\t\t\tthis.addTestSuite(newTestSuite);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate addTestSuite(newTestSuite: TestSuite) {\r\n\t\tif (newTestSuite.id) {\r\n\t\t\tconst testSuite = this.testSuites.find(ts => ts.id === newTestSuite.id);\r\n\t\t\tif (testSuite) {\r\n\t\t\t\tnewTestSuite.testCases.forEach(tc => this.testSuiteService.addTestCaseToTestSuite(tc, testSuite));\r\n\t\t\t} else {\r\n\t\t\t\tthis.testSuites.push(newTestSuite);\r\n\t\t\t\tthis.testSuites.sort((a, b) => (a.id > b.id ? -1 : 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDateDetails(testCase: TestCase) {\r\n\t\tconst date = new Date();\r\n\t\tdate.setTime(testCase.start);\r\n\t\tconst duration = testCase.stop - testCase.start;\r\n\t\treturn this.formatDate(date) + '    (Duration ' + duration + ' ms)';\r\n\t}\r\n\r\n\tprivate formatDate(date: Date) {\r\n\t\tlet hours = date.getHours();\r\n\t\tconst minutes = date.getMinutes();\r\n\t\tconst ampm = hours >= 12 ? 'pm' : 'am';\r\n\t\thours = hours % 12;\r\n\t\thours = hours ? hours : 12; // the hour '0' should be '12'\r\n\t\tconst sMinutes = minutes < 10 ? '0' + minutes : '' + minutes;\r\n\t\tconst strTime = hours + ':' + sMinutes + ' ' + ampm;\r\n\t\treturn date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear() + '  ' + strTime;\r\n\t}\r\n\r\n\tpublic doShowUser(show: boolean) {\r\n\t\tthis.showUser = show;\r\n\t\tconst parameters: LoginDialogParameters = LoginDialog.getParameters();\r\n\t\tparameters.username = this.username;\r\n\t\tparameters.password = this.password;\r\n\t\tparameters.server = this.server;\r\n\t\tthis.dialogService.showDialog(LoginDialog, parameters)\r\n\t\t\t.subscribe(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\tthis._isLogged = result.isLogged;\r\n\t\t\t\t\t\tthis.username = result.username;\r\n\t\t\t\t\t\tthis.password = result.password;\r\n\t\t\t\t\t\tthis.server = result.server;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t}\r\n\r\n\tpublic doShowReport(show: boolean) {\r\n\t\tthis.showReport = show;\r\n\t\tconst parameters: ReporterDialogParameters = ReporterDialog.getParameters();\r\n\t\tparameters.username = this.username;\r\n\t\tparameters.password = this.password;\r\n\t\tparameters.server = this.server;\r\n\t\tparameters.testSuites = this.testSuites;\r\n\r\n\t\tif (this.testSuites.length === 0) {\r\n\t\t\tthis.toastr.error('No test case provided.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!parameters.username) {\r\n\t\t\tthis.toastr.error('No username provided.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!parameters.password) {\r\n\t\t\tthis.toastr.error('No password provided.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!parameters.server) {\r\n\t\t\tthis.toastr.error('No server provided.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.dialogService.showDialog(ReporterDialog, parameters)\r\n\t\t\t.subscribe(\r\n\t\t\t\t(result) => {\r\n\r\n\t\t\t\t});\r\n\t}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FileDropModule } from 'ngx-file-drop';\r\nimport { TestLabelComponent } from './features/report/labels/test-label.component';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { TestStepsComponent } from './features/report/steps/test-steps.component';\r\nimport { TestSummaryTableComponent } from './features/report/summary/test-summary-table.component';\r\nimport { NavbarComponent } from './common/navbar/navbar.component';\r\nimport { FooterComponent } from './common/footer/footer.component';\r\nimport { TestLinkComponent } from './features/report/links/test-link.component';\r\nimport { ApiModule } from './jama/index';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TestCycleComboBox } from './components/test-cycle-combobox.component';\r\nimport { TestPlanComboBox } from './components/test-plan-combobox.component';\r\nimport { ProjectComboBox } from './components/project-combobox.component';\r\nimport { ReleaseComboBox } from './components/release-combobox.component';\r\nimport { ReporterDialog } from './features/reporter/reporter-dialog.component';\r\nimport { LoginDialog } from './features/login/login-dialog.component';\r\nimport { TestGroupComboBox } from './components/test-group-combobox.component';\r\nimport { SystelabComponentsModule } from 'systelab-components';\r\nimport { SystelabPreferencesModule } from 'systelab-preferences';\r\nimport { SystelabTranslateModule } from 'systelab-translate';\r\nimport { GridHeaderContextMenuComponent } from 'systelab-components/widgets/grid/contextmenu/grid-header-context-menu.component';\r\nimport { DialogService, MessagePopupService } from 'systelab-components/widgets/modal';\r\nimport { HelpComponent } from './features/help/help.component';\r\nimport { GridContextMenuCellRendererComponent } from 'systelab-components/widgets/grid/contextmenu/grid-context-menu-cell-renderer.component';\r\n\r\n@NgModule({\r\n\timports:      [\r\n\t\tFormsModule,\r\n\t\tApiModule,\r\n\t\tBrowserModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tHttpClientModule,\r\n\t\tFileDropModule,\r\n\t\tSystelabPreferencesModule.forRoot(),\r\n\t\tSystelabComponentsModule.forRoot(),\r\n\t\tSystelabTranslateModule.forRoot(),\r\n\t\tAgGridModule.withComponents([\r\n\t\t\tGridContextMenuCellRendererComponent,\r\n\t\t\tGridHeaderContextMenuComponent\r\n\t\t]),\r\n\t\tToastrModule.forRoot(),\r\n\t\tMarkdownModule.forRoot()\r\n\t],\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tTestLabelComponent,\r\n\t\tTestLinkComponent,\r\n\t\tTestStepsComponent,\r\n\t\tTestSummaryTableComponent,\r\n\t\tNavbarComponent,\r\n\t\tFooterComponent,\r\n\t\tLoginDialog,\r\n\t\tReporterDialog,\r\n\t\tHelpComponent,\r\n\t\tProjectComboBox,\r\n\t\tReleaseComboBox,\r\n\t\tTestPlanComboBox,\r\n\t\tTestCycleComboBox,\r\n\t\tTestGroupComboBox\r\n\t],\r\n\tproviders:    [\r\n\t\tMessagePopupService,\r\n\t\tDialogService\r\n\t],\r\n\tentryComponents: [\r\n\t\tLoginDialog,\r\n\t\tReporterDialog\r\n\t],\r\n\tbootstrap:    [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\\r\\n.sm-link {\\r\\n\\tcolor: white !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7Q0FDQyx3QkFBd0I7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9jb21tb24vZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5zbS1saW5rIHtcclxuXHRjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","module.exports = \"<footer class=\\\"page-footer font-small bg-primary text-light pt-2 pb-2 mt-3\\\">\\r\\n\\t<div class=\\\"container-fluid text-center text-md-left\\\">\\r\\n\\t\\t<div class=\\\"row d-flex\\\">\\r\\n\\t\\t\\t<div class=\\\"col-4\\\">Version 3.0.0</div>\\r\\n\\t\\t\\t<div class=\\\"col-8 text-right\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"sm-link ml-0\\\"><i class=\\\"fa fa-github white-text mr-4\\\"> </i></a>\\r\\n\\t\\t\\t\\t<a class=\\\"sm-link\\\"><i class=\\\"fa fa-twitter white-text mr-4\\\"> </i></a>\\r\\n\\t\\t\\t\\t<a class=\\\"sm-link\\\"><i class=\\\"fa fa-google-plus white-text mr-4\\\"> </i></a>\\r\\n\\t\\t\\t\\t<a class=\\\"sm-link\\\"><i class=\\\"fa fa-linkedin white-text mr-4\\\"> </i></a>\\r\\n\\t\\t\\t\\t<a class=\\\"sm-link\\\"><i class=\\\"fa fa-instagram white-text mr-4\\\"> </i></a>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</footer>\\r\\n\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n\tselector:    'app-footer',\r\n\ttemplateUrl: 'footer.component.html',\r\n\tstyleUrls:   ['footer.component.css']\r\n\r\n})\r\nexport class FooterComponent {\r\n\r\n\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n\\t<a class=\\\"navbar-brand\\\" href=\\\"#\\\">Allure reporter</a>\\r\\n\\t<div class=\\\"ml-auto\\\">\\r\\n\\t</div>\\r\\n\\t<button class=\\\"border rounded ml-2\\\" type=\\\"button\\\" [class.btn-primary]=\\\"toggleResults\\\" [class.btn-danger]=\\\"!toggleResults\\\" (click)=\\\"doResultsClick()\\\">\\r\\n\\t\\t<i class=\\\"fa fa-check text-white mt-1\\\" style=\\\"font-size: 23px;\\\"></i>\\r\\n\\t</button>\\r\\n\\t<button class=\\\"border rounded ml-2\\\" type=\\\"button\\\" [class.btn-primary]=\\\"toggleSummary\\\" [class.btn-danger]=\\\"!toggleSummary\\\" (click)=\\\"doSummaryClick()\\\">\\r\\n\\t\\t<i class=\\\"fa fa-table text-white mt-1\\\" style=\\\"font-size: 23px;\\\"></i>\\r\\n\\t</button>\\r\\n\\t<button class=\\\"btn-primary border rounded ml-2\\\" type=\\\"button\\\" (click)=\\\"doUserClick()\\\">\\r\\n\\t\\t<i class=\\\"fa fa-user text-white mt-1\\\" style=\\\"font-size: 23px;\\\"></i>\\r\\n\\t</button>\\r\\n\\t<button\\r\\n\\t\\tclass=\\\"btn-primary border rounded ml-2\\\"\\r\\n\\t\\t[disabled]=\\\"!isLogged || !allFilesProcessed\\\"\\r\\n\\t\\t[class.btn-disabled]=\\\"!isLogged || !allFilesProcessed\\\"\\r\\n\\t\\ttype=\\\"button\\\"\\r\\n\\t\\t(click)=\\\"doReportClick()\\\"\\r\\n\\t>\\r\\n\\t\\t<i class=\\\"fa fa-upload text-white mt-1\\\" style=\\\"font-size: 23px;\\\"></i>\\r\\n\\t</button>\\r\\n</nav>\\r\\n<div #progress></div>\\r\\n\"","module.exports = \".btn-disabled {\\n  opacity: 0.6; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL25hdmJhci9DOlxcUHJvamVjdHNcXG9wZW5Tb3VyY2VcXGFsbHVyZS1yZXBvcnRlci9zcmNcXGFwcFxcY29tbW9uXFxuYXZiYXJcXG5hdmJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQVksRUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1kaXNhYmxlZCB7XHJcbiAgb3BhY2l0eTogMC42O1xyXG59Il19 */\"","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\ndeclare var Nanobar: any;\r\n\r\n@Component({\r\n\tselector:    'app-navbar',\r\n\ttemplateUrl: 'navbar.component.html',\r\n\tstyleUrls: ['navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements AfterViewInit {\r\n\r\n\t@Input() toggleResults;\r\n\t@Input() isLogged;\r\n\t@Input() allFilesProcessed;\r\n\t@Output() toggleResultsChange = new EventEmitter<boolean>();\r\n\r\n\t@Input() toggleSummary;\r\n\t@Output() toggleSummaryChange = new EventEmitter<boolean>();\r\n\r\n\t@Output() user = new EventEmitter();\r\n\r\n\t@Output() report = new EventEmitter();\r\n\r\n\t@ViewChild('progress') progress: ElementRef;\r\n\r\n\tprivate nanobar: any;\r\n\r\n\tpublic ngAfterViewInit() {\r\n\t\tif (this.progress) {\r\n\t\t\tconst options = {\r\n\t\t\t\ttarget: this.progress.nativeElement\r\n\t\t\t};\r\n\t\t\tthis.nanobar = new Nanobar(options);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic doResultsClick() {\r\n\t\tthis.toggleResults = !this.toggleResults;\r\n\t\tthis.toggleResultsChange.emit(this.toggleResults);\r\n\t}\r\n\r\n\tpublic doSummaryClick() {\r\n\t\tthis.toggleSummary = !this.toggleSummary;\r\n\t\tthis.toggleSummaryChange.emit(this.toggleSummary);\r\n\t}\r\n\r\n\tpublic doUserClick() {\r\n\t\tthis.user.emit();\r\n\t}\r\n\r\n\tpublic doReportClick() {\r\n\t\tthis.report.emit();\r\n\t}\r\n\r\n\tpublic go(n: number) {\r\n\t\tif (this.nanobar) {\r\n\t\t\tif (n > 100) {\r\n\t\t\t\tn = 100;\r\n\t\t\t}\r\n\t\t\tthis.nanobar.go(n); // size bar 30%\r\n\t\t}\r\n\t}\r\n}\r\n","import { ChangeDetectorRef, Component, Input, Renderer2 } from '@angular/core';\r\nimport { ProjectsService } from '../jama/api/projects.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AbstractApiComboBox } from 'systelab-components/widgets/combobox/abstract-api-combobox.component';\r\nimport { map } from 'rxjs/internal/operators';\r\nimport { ProjectData } from '../model/project-data.model';\r\n\r\n@Component({\r\n\tselector:    'project-combobox',\r\n\ttemplateUrl: '../../../node_modules/systelab-components/html/abstract-combobox.component.html'\r\n})\r\n\r\nexport class ProjectComboBox extends AbstractApiComboBox<ProjectData> {\r\n\r\n\tpublic totalItems = 0;\r\n\r\n\tconstructor(public myRenderer: Renderer2, public chref: ChangeDetectorRef, public api: ProjectsService) {\r\n\t\tsuper(myRenderer, chref);\r\n\t}\r\n\r\n\tpublic getInstance() {\r\n\t\treturn new ProjectData();\r\n\t}\r\n\r\n\tpublic getDescriptionField(): string {\r\n\t\treturn 'name';\r\n\t}\r\n\r\n\tpublic getCodeField(): string {\r\n\t\treturn 'projectKey';\r\n\t}\r\n\r\n\tpublic getIdField(): string {\r\n\t\treturn 'id';\r\n\t}\r\n\r\n\tpublic getData(page: number, itemsPerPage: number): Observable<Array<ProjectData>> {\r\n\t\treturn this.api.getProjects(this.getStartAt(page, itemsPerPage), itemsPerPage)\r\n\t\t\t.pipe(map((value) => {\r\n\t\t\t\tthis.totalItems = value.meta.pageInfo.totalResults;\r\n\t\t\t\treturn value.data.map((p) => {\r\n\t\t\t\t\tconst projectData = new ProjectData();\r\n\t\t\t\t\tprojectData.id = p.id;\r\n\t\t\t\t\tprojectData.projectKey = p.projectKey;\r\n\t\t\t\t\tprojectData.name = p.fields.name;\r\n\t\t\t\t\treturn projectData;\r\n\t\t\t\t})\r\n\t\t\t}));\r\n\t}\r\n\r\n\tpublic getTotalItems(): number {\r\n\t\treturn this.totalItems;\r\n\t}\r\n\r\n\tpublic getStartAt(page: number, itemsPerPage: number) {\r\n\t\treturn (page - 1) * itemsPerPage;\r\n\t}\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, Renderer2 } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AbstractApiComboBox } from 'systelab-components/widgets/combobox/abstract-api-combobox.component';\r\nimport { map } from 'rxjs/internal/operators';\r\nimport { ReleasesService } from '../jama/api/releases.service';\r\nimport { ReleaseData } from '../model/release-data.model';\r\n\r\n@Component({\r\n\tselector:    'release-combobox',\r\n\ttemplateUrl: '../../../node_modules/systelab-components/html/abstract-combobox.component.html'\r\n})\r\n\r\nexport class ReleaseComboBox extends AbstractApiComboBox<ReleaseData> {\r\n\r\n\tpublic totalItems = 0;\r\n\r\n\tpublic _project: number;\r\n\r\n\tset project(value: number) {\r\n\t\tthis._project = value;\r\n\r\n\t\tthis.refresh(null);\r\n\t}\r\n\r\n\tget project() {\r\n\t\treturn this._project;\r\n\t}\r\n\r\n\tconstructor(public myRenderer: Renderer2, public chref: ChangeDetectorRef, public api: ReleasesService) {\r\n\t\tsuper(myRenderer, chref);\r\n\t}\r\n\r\n\tpublic getInstance() {\r\n\t\treturn new ReleaseData();\r\n\t}\r\n\r\n\tpublic getDescriptionField(): string {\r\n\t\treturn 'name';\r\n\t}\r\n\r\n\tpublic getCodeField(): string {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic getIdField(): string {\r\n\t\treturn 'id';\r\n\t}\r\n\r\n\tpublic getData(page: number, itemsPerPage: number): Observable<Array<ReleaseData>> {\r\n\r\n\t\tif (this.project) {\r\n\t\t\treturn this.api.getReleases(this.project, this.getStartAt(page, itemsPerPage), itemsPerPage)\r\n\t\t\t\t.pipe(map((value) => {\r\n\t\t\t\t\tthis.totalItems = value.meta.pageInfo.totalResults;\r\n\t\t\t\t\treturn value.data.map((p) => {\r\n\t\t\t\t\t\tconst releaseData = new ReleaseData();\r\n\t\t\t\t\t\treleaseData.id = p.id;\r\n\t\t\t\t\t\treleaseData.name = p.name;\r\n\t\t\t\t\t\treturn releaseData;\r\n\t\t\t\t\t})\r\n\t\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.totalItems = 0;\r\n\t\t\treturn of([]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalItems(): number {\r\n\t\treturn this.totalItems;\r\n\t}\r\n\r\n\tpublic getStartAt(page: number, itemsPerPage: number) {\r\n\t\treturn (page - 1) * itemsPerPage;\r\n\t}\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, Renderer2 } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AbstractApiComboBox } from 'systelab-components/widgets/combobox/abstract-api-combobox.component';\r\nimport { map } from 'rxjs/internal/operators';\r\nimport { TestplansService } from '../jama/api/testplans.service';\r\nimport { TestCycleData } from '../model/testcycle-data.model';\r\n\r\n@Component({\r\n\tselector:    'test-cycle-combobox',\r\n\ttemplateUrl: '../../../node_modules/systelab-components/html/abstract-combobox.component.html'\r\n})\r\n\r\nexport class TestCycleComboBox extends AbstractApiComboBox<TestCycleData> {\r\n\r\n\tpublic totalItems = 0;\r\n\r\n\tpublic _testPlan: number;\r\n\r\n\tset testPlan(value: number) {\r\n\t\tthis._testPlan = value;\r\n\r\n\t\tthis.refresh(null);\r\n\t}\r\n\r\n\tget testPlan() {\r\n\t\treturn this._testPlan;\r\n\t}\r\n\r\n\tconstructor(public myRenderer: Renderer2, public chref: ChangeDetectorRef, public api: TestplansService) {\r\n\t\tsuper(myRenderer, chref);\r\n\t}\r\n\r\n\tpublic getInstance() {\r\n\t\treturn new TestCycleData();\r\n\t}\r\n\r\n\tpublic getDescriptionField(): string {\r\n\t\treturn 'name';\r\n\t}\r\n\r\n\tpublic getCodeField(): string {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic getIdField(): string {\r\n\t\treturn 'id';\r\n\t}\r\n\r\n\tpublic getData(page: number, itemsPerPage: number): Observable<Array<TestCycleData>> {\r\n\r\n\t\tif (this.testPlan) {\r\n\t\t\treturn this.api.getTestCycles(this.testPlan, this.getStartAt(page, itemsPerPage), itemsPerPage)\r\n\t\t\t\t.pipe(map((value) => {\r\n\t\t\t\t\tthis.totalItems = value.meta.pageInfo.totalResults;\r\n\t\t\t\t\treturn value.data.map((p) => {\r\n\t\t\t\t\t\tconst testCycleData = new TestCycleData();\r\n\t\t\t\t\t\ttestCycleData.id = p.id;\r\n\t\t\t\t\t\ttestCycleData.name = p.fields.name;\r\n\t\t\t\t\t\treturn testCycleData;\r\n\t\t\t\t\t})\r\n\t\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.totalItems = 0;\r\n\t\t\treturn of([]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalItems(): number {\r\n\t\treturn this.totalItems;\r\n\t}\r\n\r\n\tpublic getStartAt(page: number, itemsPerPage: number) {\r\n\t\treturn (page - 1) * itemsPerPage;\r\n\t}\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, Renderer2 } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AbstractApiComboBox } from 'systelab-components/widgets/combobox/abstract-api-combobox.component';\r\nimport { map } from 'rxjs/internal/operators';\r\nimport { TestplansService } from '../jama/api/testplans.service';\r\nimport { TestGroupData } from '../model/testgroup-data.model';\r\n\r\n@Component({\r\n\tselector:    'test-group-combobox',\r\n\ttemplateUrl: '../../../node_modules/systelab-components/html/abstract-combobox.component.html'\r\n})\r\n\r\nexport class TestGroupComboBox extends AbstractApiComboBox<TestGroupData> {\r\n\r\n\tpublic totalItems = 0;\r\n\r\n\tpublic _testPlan: number;\r\n\r\n\tset testPlan(value: number) {\r\n\t\tthis._testPlan = value;\r\n\r\n\t\tthis.refresh(null);\r\n\t}\r\n\r\n\tget testPlan() {\r\n\t\treturn this._testPlan;\r\n\t}\r\n\r\n\tconstructor(public myRenderer: Renderer2, public chref: ChangeDetectorRef, public api: TestplansService) {\r\n\t\tsuper(myRenderer, chref);\r\n\t}\r\n\r\n\tpublic getInstance() {\r\n\t\treturn new TestGroupData();\r\n\t}\r\n\r\n\tpublic getDescriptionField(): string {\r\n\t\treturn 'name';\r\n\t}\r\n\r\n\tpublic getCodeField(): string {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic getIdField(): string {\r\n\t\treturn 'id';\r\n\t}\r\n\r\n\tpublic getData(page: number, itemsPerPage: number): Observable<Array<TestGroupData>> {\r\n\r\n\t\tif (this.testPlan) {\r\n\t\t\treturn this.api.getTestGroups(this.testPlan, this.getStartAt(page, itemsPerPage), itemsPerPage)\r\n\t\t\t\t.pipe(map((value) => {\r\n\t\t\t\t\tthis.totalItems = value.meta.pageInfo.totalResults;\r\n\t\t\t\t\treturn value.data.map((p) => {\r\n\t\t\t\t\t\tconst testGroupData = new TestGroupData();\r\n\t\t\t\t\t\ttestGroupData.id = p.id;\r\n\t\t\t\t\t\ttestGroupData.name = p.name;\r\n\t\t\t\t\t\treturn testGroupData;\r\n\t\t\t\t\t})\r\n\t\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.totalItems = 0;\r\n\t\t\treturn of([]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalItems(): number {\r\n\t\treturn this.totalItems;\r\n\t}\r\n\r\n\tpublic getStartAt(page: number, itemsPerPage: number) {\r\n\t\treturn (page - 1) * itemsPerPage;\r\n\t}\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, Renderer2 } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AbstractApiComboBox } from 'systelab-components/widgets/combobox/abstract-api-combobox.component';\r\nimport { map } from 'rxjs/internal/operators';\r\nimport { TestplansService } from '../jama/api/testplans.service';\r\nimport { TestPlanData } from '../model/testplan-data.model';\r\n\r\n@Component({\r\n\tselector:    'test-plan-combobox',\r\n\ttemplateUrl: '../../../node_modules/systelab-components/html/abstract-combobox.component.html'\r\n})\r\n\r\nexport class TestPlanComboBox extends AbstractApiComboBox<TestPlanData> {\r\n\r\n\tpublic totalItems = 0;\r\n\r\n\tpublic _project: number;\r\n\r\n\tset project(value: number) {\r\n\t\tthis._project = value;\r\n\r\n\t\tthis.refresh(null);\r\n\t}\r\n\r\n\tget project() {\r\n\t\treturn this._project;\r\n\t}\r\n\r\n\tconstructor(public myRenderer: Renderer2, public chref: ChangeDetectorRef, public api: TestplansService) {\r\n\t\tsuper(myRenderer, chref);\r\n\t}\r\n\r\n\tpublic getInstance() {\r\n\t\treturn new TestPlanData();\r\n\t}\r\n\r\n\tpublic getDescriptionField(): string {\r\n\t\treturn 'name';\r\n\t}\r\n\r\n\tpublic getCodeField(): string {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic getIdField(): string {\r\n\t\treturn 'id';\r\n\t}\r\n\r\n\tpublic getData(page: number, itemsPerPage: number): Observable<Array<TestPlanData>> {\r\n\r\n\t\tif (this.project) {\r\n\t\t\treturn this.api.getTestPlans(this.project, this.getStartAt(page, itemsPerPage), itemsPerPage)\r\n\t\t\t\t.pipe(map((value) => {\r\n\t\t\t\t\tthis.totalItems = value.meta.pageInfo.totalResults;\r\n\t\t\t\t\treturn value.data.map((p) => {\r\n\t\t\t\t\t\tconst testPlanData = new TestPlanData();\r\n\t\t\t\t\t\ttestPlanData.id = p.id;\r\n\t\t\t\t\t\ttestPlanData.name = p.fields.name;\r\n\t\t\t\t\t\treturn testPlanData;\r\n\t\t\t\t\t})\r\n\t\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.totalItems = 0;\r\n\t\t\treturn of([]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalItems(): number {\r\n\t\treturn this.totalItems;\r\n\t}\r\n\r\n\tpublic getStartAt(page: number, itemsPerPage: number) {\r\n\t\treturn (page - 1) * itemsPerPage;\r\n\t}\r\n\r\n}\r\n","module.exports = \"<br><br>\\r\\n<markdown ngPreserveWhitespaces>\\r\\n# Allure Reporter\\r\\n---\\r\\nAllure reporter will help you in the Test Case Automation strategy by generating Test Design and Test Run from the source code following a Test Case format, as well as JAMA\\r\\nContour integration to report the executions.\\r\\n\\r\\nPlease refer to the specific documentation for Java, .NET or Angular.\\r\\n</markdown>\\r\\n<br>\\r\\n<div markdown [src]=\\\"'assets/mapping_model.md'\\\"></div>\\r\\n<br>\\r\\n<div markdown [src]=\\\"'assets/java.md'\\\"></div>\\r\\n<br>\\r\\n<div markdown [src]=\\\"'assets/dotnet.md'\\\"></div>\\r\\n<br>\\r\\n<div markdown [src]=\\\"'assets/angular.md'\\\"></div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector:    'help',\r\n\ttemplateUrl: 'help.component.html'\r\n})\r\nexport class HelpComponent {\r\n\r\n}\r\n","module.exports = \"<systelab-dialog-header (close)=\\\"close()\\\">Login</systelab-dialog-header>\\r\\n<div class=\\\"slab-flex-1 slab-overflow-container container-fluid\\\">\\r\\n\\r\\n\\t<form class=\\\"pt-2\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"username\\\" class=\\\"col-form-label text-truncate\\\">Username</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-8\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"parameters.username\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row mt-1\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"password\\\" class=\\\"col-form-label text-truncate\\\">Password</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-8\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"parameters.password\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row mt-1\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"server\\\" class=\\\"col-form-label text-truncate\\\">Server</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-8\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"server\\\" name=\\\"server\\\" [(ngModel)]=\\\"parameters.server\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</form>\\r\\n\\t<div>\\r\\n\\t\\t<systelab-loading *ngIf=\\\"isLoading\\\" [useClassic]=\\\"false\\\"></systelab-loading>\\r\\n\\t</div>\\r\\n</div>\\r\\n<systelab-dialog-bottom>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn ml-auto\\\" (click)=\\\"doGo()\\\">Save changes</button>\\r\\n</systelab-dialog-bottom>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { DialogRef, ModalComponent, SystelabModalContext } from 'systelab-components/widgets/modal';\r\nimport { ProjectsService } from '../../jama/api/projects.service';\r\nimport { map, catchError } from 'rxjs/internal/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { throwError } from 'rxjs';\r\n\r\nexport class LoginDialogParameters extends SystelabModalContext {\r\n\tpublic width = 450;\r\n\tpublic height = 250;\r\n\tpublic username = '';\r\n\tpublic password = '';\r\n\tpublic server = '';\r\n}\r\n\r\n@Component({\r\n\tselector:    'login-dialog',\r\n\ttemplateUrl: 'login-dialog.component.html',\r\n})\r\nexport class LoginDialog implements ModalComponent<LoginDialogParameters> {\r\n\tpublic parameters: LoginDialogParameters;\r\n\tprivate isLogged: boolean;\r\n\tpublic isLoading = false;\r\n\r\n\tconstructor(public dialog: DialogRef<LoginDialogParameters>, private api: ProjectsService, private toastr: ToastrService) {\r\n\t\tthis.parameters = dialog.context;\r\n\t\tthis.isLogged = !!(this.parameters.username && this.parameters.password);\r\n\t}\r\n\r\n\tpublic static getParameters(): LoginDialogParameters {\r\n\t\treturn new LoginDialogParameters();\r\n\t}\r\n\r\n\tpublic close(): void {\r\n\t\tif (document.body.classList.contains('modal-open')) {\r\n\t\t\tdocument.body.classList.remove('modal-open');\r\n\t\t}\r\n\t\tthis.dialog.close({\r\n\t\t\tisLogged: this.isLogged,\r\n\t\t\tusername: this.isLogged ? this.parameters.username : '',\r\n\t\t\tpassword: this.isLogged ? this.parameters.password : '',\r\n\t\t\tserver:   this.parameters.server\r\n\t\t});\r\n\t}\r\n\r\n\tpublic doGo() {\r\n\t\tthis.isLoading = true;\r\n\t\tif (document.body.classList.contains('modal-open')) {\r\n\t\t\tdocument.body.classList.remove('modal-open');\r\n\t\t}\r\n\r\n\t\tthis.checkConnection().subscribe(() => {\r\n\t\t\tthis.dialog.close({\r\n\t\t\t\tisLogged: true,\r\n\t\t\t\tusername: this.parameters.username,\r\n\t\t\t\tpassword: this.parameters.password,\r\n\t\t\t\tserver:   this.parameters.server\r\n\t\t\t});\r\n\t\t},\r\n\t\t() => this.isLogged = false\r\n\t\t).add(() => this.isLoading = false);\r\n\t}\r\n\r\n\tprivate checkConnection() {\r\n\t\tthis.api.configuration.username = this.parameters.username;\r\n\t\tthis.api.configuration.password = this.parameters.password;\r\n\t\tthis.api.configuration.basePath = this.parameters.server;\r\n\r\n\t\treturn this.api.getProjects(0, 20)\r\n\t\t\t.pipe(\r\n\t\t\t\tcatchError(this.handleError.bind(this))\r\n\t\t\t);\r\n\t}\r\n\r\n\tprivate handleError(error: HttpErrorResponse) {\r\n\t\tif (error.status === 0) {\r\n\t\t\t// A client-side or network error occurred. Handle it accordingly.\r\n\t\t\tthis.toastr.error('Network error occurred:');\r\n\t\t} else {\r\n\t\t\t// The backend returned an unsuccessful response code.\r\n\t\t\t// The response body may contain clues as to what went wrong.\r\n\t\t\tthis.toastr.error(\r\n\t\t\t\t`Jama returned code ${error.status}${error.status === 401 ? ' - wrong username or password' : ''}`);\r\n\t\t}\r\n\t\t// Return an observable with a user-facing error message.\r\n\t\treturn throwError(\r\n\t\t\t'Something bad happened; please try again later.');\r\n\t}\r\n}\r\n","module.exports = \"<div *ngIf=\\\"label.name!=='tms' && label.name!=='feature' && label.name!=='suite' && label.name!=='package' && label.name!=='actualResults'\\\">\\r\\n\\t<p markdown>{{label.name}}: {{label.value}}</p>\\r\\n</div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Label } from '../../../model/allure-test-case.model';\r\n\r\n@Component({\r\n\tselector:    'test-label',\r\n\ttemplateUrl: 'test-label.component.html'\r\n})\r\nexport class TestLabelComponent {\r\n\r\n\t@Input() label: Label;\r\n\r\n}\r\n","module.exports = \"\\r\\n<a href=\\\"{{link.url}}\\\">\\r\\n\\t<i *ngIf=\\\"link.type==='requirement'\\\" class=\\\"text-primary fa fa-database\\\" style=\\\"font-size:15px;\\\"></i>\\r\\n\\t<i *ngIf=\\\"link.type==='tms'\\\" class=\\\"text-primary fa fa-database\\\" style=\\\"font-size:15px;\\\"></i>\\r\\n\\t<i *ngIf=\\\"link.type==='issue'\\\" class=\\\"text-primary fa fa-bug\\\" style=\\\"font-size:16px;\\\"></i>\\r\\n\\t{{link.name}}\\r\\n</a>\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Link } from '../../../model/allure-test-case.model';\r\n\r\n@Component({\r\n\tselector:    'test-link',\r\n\ttemplateUrl: 'test-link.component.html'\r\n})\r\nexport class TestLinkComponent {\r\n\r\n\t@Input() link: Link;\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"steps && steps.length>0\\\" class=\\\"container\\\">\\r\\n\\t<div *ngIf=\\\"withHeader\\\" class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-1 header-cell\\\">#</div>\\r\\n\\t\\t<div class=\\\"col-6 header-cell\\\">Action</div>\\r\\n\\t\\t<div class=\\\"col-3 header-cell\\\">Expected Result</div>\\r\\n\\t\\t<div class=\\\"col-1 header-cell\\\">P/F</div>\\r\\n\\t\\t<div class=\\\"col-1 header-cell\\\">Time</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div *ngFor=\\\"let step of steps; let i=index;\\\" class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-1 cell\\\">{{step.numberOfStep}}</div>\\r\\n\\t\\t<div class=\\\"col-6 cell\\\" *ngIf=\\\"i===0\\\" [innerHTML]=\\\"getActionInHTML(action, step.action)\\\"></div>\\r\\n\\t\\t<div class=\\\"col-6 cell\\\" *ngIf=\\\"i>0\\\" [innerHTML]=\\\"step.action\\\"></div>\\r\\n\\t\\t<div class=\\\"col-3 cell\\\" style=\\\"word-break:break-all; word-wrap:break-word\\\">\\r\\n\\t\\t\\t{{step.expectedResult}}\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-1 cell\\\" [class.note]=\\\"showResults && hasExpectedResult(step)\\\">\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"showResults && hasExpectedResult(step)\\\">\\r\\n\\t\\t\\t\\t<i *ngIf=\\\"step.status==='passed'\\\" class=\\\"fa fa-check-circle-o\\\" style=\\\"font-size:20px;color:green;\\\"></i>\\r\\n\\t\\t\\t\\t<i *ngIf=\\\"step.status==='failed'\\\" class=\\\"fa fa-times-circle-o\\\" style=\\\"font-size:20px;color:red;\\\"></i>\\r\\n\\t\\t\\t\\t<i *ngIf=\\\"step.status==='broken'\\\" class=\\\"fa fa-times-circle-o\\\" style=\\\"font-size:20px;color:orange;\\\"></i>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-1 cell\\\">\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"showResults\\\">{{getTimeSpendInStep(step)}}</ng-container>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<test-steps *ngIf=\\\"step.steps && step.steps.length>0\\\" [steps]=\\\"step.steps\\\" [showResults]=\\\"showResults\\\" [withHeader]=\\\"false\\\" [level]=\\\"level+1\\\" class=\\\"w-100\\\"></test-steps>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".cell {\\n  padding: 7px;\\n  background-color: rgba(249, 249, 249, 0.48);\\n  border: 1px solid #D8D8D8; }\\n\\n.header-cell {\\n  padding: 7px;\\n  background-color: #f1f1f1;\\n  border: 1px solid #D8D8D8; }\\n\\n.note {\\n  position: relative; }\\n\\n.note:after {\\n  /* Magic Happens Here!!! */\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 0;\\n  height: 0;\\n  display: block;\\n  border-left: 20px solid transparent;\\n  border-bottom: 20px solid transparent;\\n  border-top: 20px solid green; }\\n\\n.check-step {\\n  background-color: rgba(238, 254, 77, 0.16); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVhdHVyZXMvcmVwb3J0L3N0ZXBzL0M6XFxQcm9qZWN0c1xcb3BlblNvdXJjZVxcYWxsdXJlLXJlcG9ydGVyL3NyY1xcYXBwXFxmZWF0dXJlc1xccmVwb3J0XFxzdGVwc1xcdGVzdC1zdGVwcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGFBQVk7RUFDWiw0Q0FBMkM7RUFDM0MsMEJBQXlCLEVBQ3pCOztBQUVEO0VBQ0MsYUFBWTtFQUNaLDBCQUF5QjtFQUN6QiwwQkFBeUIsRUFDekI7O0FBRUQ7RUFDQyxtQkFBa0IsRUFDbEI7O0FBRUQ7RUFBYywyQkFBMkI7RUFDeEMsWUFBVztFQUNYLG1CQUFrQjtFQUNsQixPQUFNO0VBQ04sU0FBUTtFQUNSLFNBQVE7RUFDUixVQUFTO0VBQ1QsZUFBYztFQUNkLG9DQUFtQztFQUNuQyxzQ0FBcUM7RUFFckMsNkJBQTRCLEVBQzVCOztBQUVEO0VBQ0MsMkNBQTBDLEVBQzFDIiwiZmlsZSI6InNyYy9hcHAvZmVhdHVyZXMvcmVwb3J0L3N0ZXBzL3Rlc3Qtc3RlcHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VsbCB7XHJcblx0cGFkZGluZzogN3B4O1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ5LCAyNDksIDI0OSwgMC40OCk7XHJcblx0Ym9yZGVyOiAxcHggc29saWQgI0Q4RDhEODtcclxufVxyXG5cclxuLmhlYWRlci1jZWxsIHtcclxuXHRwYWRkaW5nOiA3cHg7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuXHRib3JkZXI6IDFweCBzb2xpZCAjRDhEOEQ4O1xyXG59XHJcblxyXG4ubm90ZSB7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubm90ZTphZnRlciB7IC8qIE1hZ2ljIEhhcHBlbnMgSGVyZSEhISAqL1xyXG5cdGNvbnRlbnQ6IFwiXCI7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMDtcclxuXHRyaWdodDogMDtcclxuXHR3aWR0aDogMDtcclxuXHRoZWlnaHQ6IDA7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0Ym9yZGVyLWxlZnQ6IDIwcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0Ym9yZGVyLWJvdHRvbTogMjBweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHJcblx0Ym9yZGVyLXRvcDogMjBweCBzb2xpZCBncmVlbjtcclxufVxyXG5cclxuLmNoZWNrLXN0ZXAge1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM4LCAyNTQsIDc3LCAwLjE2KTtcclxufVxyXG4iXX0= */\"","import { Component, Input } from '@angular/core';\r\nimport { Step } from '../../../model/allure-test-case.model';\r\n\r\n@Component({\r\n\tselector:    'test-steps',\r\n\ttemplateUrl: 'test-steps.component.html',\r\n\tstyleUrls:   ['test-steps.component.scss']\r\n})\r\nexport class TestStepsComponent {\r\n\r\n\t@Input() steps: Step[] = [];\r\n\t@Input() withHeader = true;\r\n\t@Input() level = 0;\r\n\t@Input() showResults = true;\r\n\t@Input() action: '';\r\n\r\n\tpublic getTimeSpendInStep(step: Step) {\r\n\t\treturn step ? (step.stop - step.start) + ' ms' : '-';\r\n\t}\r\n\r\n\tpublic hasChildren(step: Step) {\r\n\t\treturn (step && step.steps && step.steps.length > 0);\r\n\t}\r\n\r\n\tpublic hasExpectedResult(step: Step) {\r\n\t\tif (step.expectedResult) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic getActionInHTML(action: string, step: Step): string {\r\n\t\tlet actionInHTML = '';\r\n\t\tif (action) {\r\n\t\t\tactionInHTML = action;\r\n\t\t}\r\n\t\tif (step) {\r\n\t\t\tactionInHTML += step;\r\n\t\t}\r\n\t\treturn actionInHTML;\r\n\t}\r\n}\r\n","module.exports = \".cell {\\r\\n\\tpadding: 7px;\\r\\n\\tbackground-color: rgba(249, 249, 249, 0.48);\\r\\n\\tborder: 1px solid #D8D8D8;\\r\\n}\\r\\n\\r\\n.header-cell {\\r\\n\\tpadding: 7px;\\r\\n\\tbackground-color: #f1f1f1;\\r\\n\\tborder: 1px solid #D8D8D8;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVhdHVyZXMvcmVwb3J0L3N1bW1hcnkvdGVzdC1zdW1tYXJ5LXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0NBQ2IsNENBQTRDO0NBQzVDLDBCQUEwQjtDQUMxQjs7QUFFRDtDQUNDLGFBQWE7Q0FDYiwwQkFBMEI7Q0FDMUIsMEJBQTBCO0NBQzFCIiwiZmlsZSI6InNyYy9hcHAvZmVhdHVyZXMvcmVwb3J0L3N1bW1hcnkvdGVzdC1zdW1tYXJ5LXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VsbCB7XHJcblx0cGFkZGluZzogN3B4O1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ5LCAyNDksIDI0OSwgMC40OCk7XHJcblx0Ym9yZGVyOiAxcHggc29saWQgI0Q4RDhEODtcclxufVxyXG5cclxuLmhlYWRlci1jZWxsIHtcclxuXHRwYWRkaW5nOiA3cHg7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuXHRib3JkZXI6IDFweCBzb2xpZCAjRDhEOEQ4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div *ngIf=\\\"elements && elements.length>0\\\">\\r\\n\\t<h2 class=\\\"mb-2 mt-4\\\">Test Summary by {{categoryName}}</h2>\\r\\n\\t<div class=\\\"container mt-3\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-8 header-cell\\\">{{categoryName}}</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 header-cell\\\">Pass</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 header-cell\\\">Fail</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 header-cell\\\">Other</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 header-cell\\\">Total</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div *ngFor=\\\"let element of elements\\\" class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-8 cell\\\">\\r\\n\\t\\t\\t\\t{{element.name}}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 cell\\\">\\r\\n\\t\\t\\t\\t{{element.getPassedPercentage()}}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 cell\\\">\\r\\n\\t\\t\\t\\t{{element.getFailedPercentage()}}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 cell\\\">\\r\\n\\t\\t\\t\\t{{element.getOtherPercentage()}}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-1 cell\\\">{{element.total}}</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\"","import { ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { TestCase, TestSuite } from '../../../model/allure-test-case.model';\r\n\r\nexport class Element {\r\n\tpublic total = 0;\r\n\tpublic passed = 0;\r\n\tpublic failed = 0;\r\n\tpublic other = 0;\r\n\r\n\tpublic constructor(public name: string) {\r\n\t}\r\n\r\n\tpublic incrementCounters(status) {\r\n\t\tthis.total++;\r\n\t\tif (status === 'passed') {\r\n\t\t\tthis.passed++;\r\n\t\t} else if (status === 'failed') {\r\n\t\t\tthis.failed++;\r\n\t\t} else {\r\n\t\t\tthis.other++;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getPassedPercentage() {\r\n\t\treturn this.getPercentage(this.passed);\r\n\t}\r\n\r\n\tpublic getFailedPercentage() {\r\n\t\treturn this.getPercentage(this.failed);\r\n\t}\r\n\r\n\tpublic getOtherPercentage() {\r\n\t\treturn this.getPercentage(this.other);\r\n\t}\r\n\r\n\tprivate getPercentage(items: number) {\r\n\t\treturn Math.round(items * 100 / this.total) + '%';\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector:    'test-summary-table',\r\n\ttemplateUrl: 'test-summary-table.component.html',\r\n\tstyleUrls:   ['test-summary-table.component.css']\r\n\r\n})\r\nexport class TestSummaryTableComponent {\r\n\r\n\t@Input() public category = '';\r\n\t@Input() public categoryName = '';\r\n\r\n\tpublic elements: Element[] = [];\r\n\r\n\tpublic constructor(private ref: ChangeDetectorRef) {\r\n\t}\r\n\r\n\tpublic setTests(testSuites: TestSuite[]) {\r\n\t\tthis.elements = [];\r\n\t\ttestSuites.forEach(ts => {\r\n\t\t\tts.testCases.forEach(tc => this.createOrUpdateElement(tc));\r\n\t\t});\r\n\t\tthis.ref.detectChanges();\r\n\t}\r\n\r\n\tprivate createOrUpdateElement(test: TestCase): void {\r\n\t\tconst elementName = this.getElementName(test);\r\n\r\n\t\tlet element = this.elements.find((e) => e.name === elementName);\r\n\t\tif (!element) {\r\n\t\t\telement = new Element(elementName);\r\n\t\t\tthis.elements.push(element);\r\n\t\t}\r\n\t\telement.incrementCounters(test.status);\r\n\t}\r\n\r\n\tprivate getElementName(test: TestCase): string {\r\n\t\tconst label = test.labels.find((l) => l.name === this.category);\r\n\t\treturn label ? label.value : '';\r\n\t}\r\n}\r\n","module.exports = \"<systelab-dialog-header #header (close)=\\\"close()\\\" [withProgressBar]=\\\"true\\\">Report to Jama v3</systelab-dialog-header>\\r\\n<div class=\\\"slab-flex-1 slab-overflow-container container-fluid\\\">\\r\\n\\r\\n\\t<form class=\\\"pt-4\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"col-form-label\\\">Project</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<project-combobox #projectComboBox [(id)]=\\\"selectedProjectId\\\" [(description)]=\\\"selectedProjectName\\\"\\r\\n\\t\\t\\t\\t\\t[emptyElement]=\\\"false\\\"></project-combobox>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"col-form-label\\\">Test Plan</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<test-plan-combobox #testPlanComboBox [(id)]=\\\"selectedTestPlanId\\\" [(description)]=\\\"selectedTestPlanName\\\"\\r\\n\\t\\t\\t\\t\\t[emptyElement]=\\\"false\\\"></test-plan-combobox>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"col-form-label\\\">Test Cycle</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<test-cycle-combobox #testCycleComboBox [(id)]=\\\"selectedTestCycleId\\\" [(description)]=\\\"selectedTestCycleName\\\"\\r\\n\\t\\t\\t\\t\\t[emptyElement]=\\\"false\\\"></test-cycle-combobox>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"col-form-label\\\">Test Group</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<test-group-combobox #testGroupComboBox [multipleSelection]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t[(multipleSelectedItemList)]=\\\"selectedTestGroups\\\" [isDisabled]=\\\"selectedTestCycleId!==undefined\\\">\\r\\n\\t\\t\\t\\t</test-group-combobox>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"newtestcycle\\\" class=\\\"col-form-label\\\">New Test Cycle name</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newtestcycle\\\" name=\\\"newtestcycle\\\" [(ngModel)]=\\\"nameForNewTestCycle\\\"\\r\\n\\t\\t\\t\\t\\t[disabled]=\\\"selectedTestCycleId!==undefined\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"executedinversion\\\" class=\\\"col-form-label\\\">Executed in version</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<release-combobox #releaseComboBox [(id)]=\\\"selectedReleaseId\\\" [(description)]=\\\"selectedReleaseName\\\"\\r\\n\\t\\t\\t\\t\\t[emptyElement]=\\\"true\\\"></release-combobox>\\r\\n\\t\\t\\t\\t<small id=\\\"apiWarning\\\" class=\\\"form-text text-muted\\\">\\r\\n\\t\\t\\t\\t\\tThis value will be set as the <b>Tested version</b> field for the <b>Test Run</b>.<br/>\\r\\n\\t\\t\\t\\t\\tNote: This feature (setting the version) uses the experimental Rest API. This is subject to change if JAMA version changes.\\r\\n\\t\\t\\t\\t\\t  </small>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" id=\\\"update-test-case-version\\\" name=\\\"updateTestCaseVersion\\\" [(ngModel)]=\\\"updateTestCaseVersion\\\"\\r\\n\\t\\t\\t\\t[disabled]=\\\"selectedReleaseId!==undefined\\\"/>\\r\\n\\t\\t\\t\\t<label for=\\\"update-test-case-version\\\" class=\\\"col-form-label\\\">Update also 'Last Tested Version' field in the corresponding Test Cases</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row mt-2\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"actualresults\\\" class=\\\"col-form-label\\\">Actual Results</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<textarea id=\\\"actualresults\\\" name=\\\"actualresults\\\" class=\\\"slab-textarea w-100 slab-textarea-vertical-resize\\\"\\r\\n\\t\\t\\t\\t\\trows=\\\"5\\\" [(ngModel)]=\\\"actualResults\\\"></textarea>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n\\t<div *ngIf=\\\"uploading && !areResultsReady()\\\">Uploading...</div>\\r\\n\\t<div class=\\\"row mt-1 mb-4 results-container\\\" *ngIf=\\\"areResultsReady()\\\">\\r\\n\\t\\t<div class=\\\"col-md-12 mt-1 mb-2\\\">\\r\\n\\t\\t\\t<h4 class=\\\"mb-4\\\">Upload Results</h4>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<span>Total of Test Cases to upload:</span><span class=\\\"result-number\\\"> {{totalSuites}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<span>Total of Test Cases uploaded:</span>\\r\\n\\t\\t\\t\\t<span class=\\\"result-number\\\"> {{testsRun['passed'] + testsRun['failed']}} (Pass {{testsRun['passed']}}, Failed {{testsRun['failed']}})</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"testsRun['NotUpdated'] > 0\\\">\\r\\n\\t\\t\\t\\t<span>Number of Test Cases that exist in Jama but are not updated due to an error:</span>\\r\\n\\t\\t\\t\\t<span class=\\\"result-number\\\"> {{testsRun['NotUpdated']}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-md-12\\\" *ngIf=\\\"areResultsWrong()\\\">\\r\\n\\t\\t\\t<h6>Wrong uploads</h6>\\r\\n\\t\\t\\t<div *ngIf=\\\"testsUpload['NotUpdated'].length > 0\\\">\\r\\n\\t\\t\\t\\t<h6 class=\\\"text-secondary\\\">Test Cases that exist in Jama but are not updated due to an error</h6>\\r\\n\\t\\t\\t\\t<table class=\\\"table table-sm table-striped\\\">\\r\\n\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th scope=\\\"col\\\">Test</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let test of testsUpload['NotUpdated']\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{test}}</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngIf=\\\"testsUpload['FileNotInJama'].length > 0\\\">\\r\\n\\t\\t\\t\\t<h6 class=\\\"text-secondary\\\">Number of Test Cases not found in Jama in the selected Test Cycle</h6>\\r\\n\\t\\t\\t\\t<table class=\\\"table table-sm table-striped\\\">\\r\\n\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th scope=\\\"col\\\">Test</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let test of testsUpload['FileNotInJama']\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{test}}</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<systelab-dialog-bottom>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn mr-0\\\" [disabled]=\\\"!this.selectedProjectId\\\" (click)=\\\"doUpdateTestCase()\\\">Update Test Cases</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn ml-auto\\\" [disabled]=\\\"!isValidForm()\\\" (click)=\\\"doRun()\\\">Report</button>\\r\\n</systelab-dialog-bottom>\\r\\n\"","module.exports = \".results-table td:nth-child(2) {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVhdHVyZXMvcmVwb3J0ZXIvQzpcXFByb2plY3RzXFxvcGVuU291cmNlXFxhbGx1cmUtcmVwb3J0ZXIvc3JjXFxhcHBcXGZlYXR1cmVzXFxyZXBvcnRlclxccmVwb3J0ZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQWtCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvZmVhdHVyZXMvcmVwb3J0ZXIvcmVwb3J0ZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlc3VsdHMtdGFibGUgdGQ6bnRoLWNoaWxkKDIpe1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DialogHeaderComponent, DialogRef, ModalComponent, SystelabModalContext } from 'systelab-components/widgets/modal';\r\nimport { ProjectsService, RequestTestCycle, RequestTestRun, TestplansService, TestRun, TestrunsService, UsersService, ItemsService, TestRunDataListWrapper, AbstractitemsService, RequestItem, RequestPatchOperation, ItemDataWrapper, ReleasesService } from '../../jama';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProjectComboBox } from '../../components/project-combobox.component';\r\nimport { TestPlanComboBox } from '../../components/test-plan-combobox.component';\r\nimport { TestGroupComboBox } from '../../components/test-group-combobox.component';\r\nimport { TestCycleComboBox } from '../../components/test-cycle-combobox.component';\r\nimport { ReleaseComboBox } from '../../components/release-combobox.component';\r\nimport { Observable, range, throwError, forkJoin } from 'rxjs';\r\nimport { concatMap, map,  takeWhile, mergeMap, tap} from 'rxjs/operators';\r\nimport { format } from 'date-fns';\r\nimport { TestSuiteService } from '../../service/test-suite.service';\r\nimport { TestSuite } from '../../model/allure-test-case.model';\r\n\r\nexport class ReporterDialogParameters extends SystelabModalContext {\r\n\tpublic width = 900;\r\n\tpublic height = 600;\r\n\tpublic username;\r\n\tpublic password;\r\n\tpublic server;\r\n\tpublic testSuites: TestSuite[];\r\n}\r\n\r\nenum ResultStatus {\r\n\tPassed = 'passed',\r\n\tFailed = 'failed',\r\n\tBlocked = 'blocked',\r\n\tNotUpdated = 'NotUpdated',\r\n\tFileNotInJama = 'FileNotInJama'\r\n}\r\n\r\n@Component({\r\n\tselector:    'reporter-dialog',\r\n\ttemplateUrl: 'reporter-dialog.component.html',\r\n\tstyleUrls: ['reporter-dialog.component.scss']\r\n})\r\nexport class ReporterDialog implements ModalComponent<ReporterDialogParameters>, OnInit {\r\n\r\n\t@ViewChild('projectComboBox') public projectComboBox: ProjectComboBox;\r\n\t@ViewChild('testPlanComboBox') public testPlanComboBox: TestPlanComboBox;\r\n\t@ViewChild('testCycleComboBox') public testCycleComboBox: TestCycleComboBox;\r\n\t@ViewChild('testGroupComboBox') public testGroupComboBox: TestGroupComboBox;\r\n\t@ViewChild('releaseComboBox') public releaseComboBox: ReleaseComboBox;\r\n\t@ViewChild('header') header: DialogHeaderComponent;\r\n\r\n\tpublic parameters: ReporterDialogParameters;\r\n\r\n\tprivate _userId;\r\n\r\n\tprivate _selectedProjectId: number;\r\n\tpublic selectedProjectName: string;\r\n\r\n\tprivate _selectedTestPlanId: number;\r\n\tpublic selectedTestPlanName: string;\r\n\r\n\tprivate _selectedTestCycleId: number;\r\n\tpublic selectedTestCycleName = 'New Test Cycle';\r\n\r\n\tprivate _selectedReleaseId: number;\r\n\tpublic selectedReleaseName: string;\r\n\r\n\tpublic updateTestCaseVersion : boolean = false;\r\n\r\n\tpublic selectedTestGroups?: Array<any> = [];\r\n\r\n\tpublic nameForNewTestCycle = '';\r\n\tpublic actualResults = '';\r\n\r\n\tpublic totalTestsRun = 0;\r\n\tpublic totalSuites = 0;\r\n\tpublic currentTestsRun = 0;\r\n\tpublic testsRun = {\r\n\t\t[ResultStatus.Passed]: 0,\r\n\t\t[ResultStatus.Failed]: 0,\r\n\t\t[ResultStatus.NotUpdated]: 0,\r\n\t\t[ResultStatus.FileNotInJama]: 0\r\n\t};\r\n\r\n\tpublic testsUpload = {\r\n\t\t[ResultStatus.Passed]: [],\r\n\t\t[ResultStatus.Failed]: [],\r\n\t\t[ResultStatus.NotUpdated]: [],\r\n\t\t[ResultStatus.FileNotInJama]: []\r\n\t};\r\n\r\n\tpublic uploading = false;\r\n\r\n\tpublic testsRunPercentage = 0;\r\n\r\n\tconstructor(public dialog: DialogRef<ReporterDialogParameters>, private usersService: UsersService, private projectsService: ProjectsService,\r\n\t\t\t\t\t\t\tprivate releasesService : ReleasesService,\r\n\t\t\t\t\t\t\tprivate testplansService: TestplansService, private testrunsService: TestrunsService,\r\n\t\t\t\t\t\t\tprivate testSuiteService: TestSuiteService, private toastr: ToastrService, private itemsService: ItemsService,\r\n\t\t\t\t\t\t\tprivate abstractItemService: AbstractitemsService) {\r\n\t\tthis.parameters = dialog.context;\r\n\t}\r\n\r\n\tpublic ngOnInit() {\r\n\t\tthis.usersService.configuration.username = this.parameters.username;\r\n\t\tthis.usersService.configuration.password = this.parameters.password;\r\n\t\tthis.usersService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tthis.projectsService.configuration.username = this.parameters.username;\r\n\t\tthis.projectsService.configuration.password = this.parameters.password;\r\n\t\tthis.projectsService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tthis.testplansService.configuration.username = this.parameters.username;\r\n\t\tthis.testplansService.configuration.password = this.parameters.password;\r\n\t\tthis.testplansService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tthis.testrunsService.configuration.username = this.parameters.username;\r\n\t\tthis.testrunsService.configuration.password = this.parameters.password;\r\n\t\tthis.testrunsService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tthis.itemsService.configuration.username = this.parameters.username;\r\n\t\tthis.itemsService.configuration.password = this.parameters.password;\r\n\t\tthis.itemsService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tthis.releasesService.configuration.username = this.parameters.username;\r\n\t\tthis.releasesService.configuration.password = this.parameters.password;\r\n\t\tthis.releasesService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tthis.abstractItemService.configuration.username = this.parameters.username;\r\n\t\tthis.abstractItemService.configuration.password = this.parameters.password;\r\n\t\tthis.abstractItemService.configuration.basePath = this.parameters.server;\r\n\r\n\t\tif (this.parameters.username && this.parameters.password && this.parameters.server) {\r\n\t\t\tthis.usersService.getCurrentUser()\r\n\t\t\t\t.subscribe((user) => {\r\n\t\t\t\t\tthis._userId = user.data.id;\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t\tthis.toastr.error('Couldn\\'t get the username: ' + this.parameters.username);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isValidForm() {\r\n\t\treturn this._userId && this.selectedProjectId && this.selectedTestPlanId &&\r\n\t\t\t(this.selectedTestCycleId || (this.selectedTestGroups.length > 0 && this.nameForNewTestCycle !== ''));\r\n\t}\r\n\r\n\tpublic get selectedProjectId(): number {\r\n\t\treturn this._selectedProjectId;\r\n\t}\r\n\r\n\tpublic set selectedProjectId(value: number) {\r\n\t\tthis._selectedProjectId = value;\r\n\t\tthis.selectedTestPlanId = undefined;\r\n\t\tthis.selectedTestPlanName = undefined;\r\n\t\tthis.testPlanComboBox.project = value;\r\n\t\tthis.releaseComboBox.project = value;\r\n\t}\r\n\r\n\tpublic get selectedTestPlanId(): number {\r\n\t\treturn this._selectedTestPlanId;\r\n\t}\r\n\r\n\tpublic set selectedTestPlanId(value: number) {\r\n\t\tthis._selectedTestPlanId = value;\r\n\t\tthis.selectedTestGroups = [];\r\n\t\tthis.selectedTestCycleId = undefined;\r\n\t\tthis.selectedTestCycleName = 'New Test Cycle';\r\n\t\tthis.testCycleComboBox.testPlan = value;\r\n\t\tthis.testGroupComboBox.testPlan = value;\r\n\t}\r\n\r\n\tpublic get selectedTestCycleId(): number {\r\n\t\treturn this._selectedTestCycleId;\r\n\t}\r\n\r\n\tpublic set selectedTestCycleId(value: number) {\r\n\t\tthis._selectedTestCycleId = value;\r\n\t}\r\n\r\n\tpublic set selectedReleaseId(value: number) {\r\n\t\tthis._selectedReleaseId = value;\r\n\t}\r\n\r\n\r\n\tpublic static getParameters(): ReporterDialogParameters {\r\n\t\treturn new ReporterDialogParameters();\r\n\t}\r\n\r\n\tpublic close(): void {\r\n\t\tif (document.body.classList.contains('modal-open')) {\r\n\t\t\tdocument.body.classList.remove('modal-open');\r\n\t\t}\r\n\t\tthis.dialog.close(false);\r\n\t}\r\n\r\n\tpublic doUpdateTestCase() {\r\n\t\t\tconst testCaseItemType = [26, 59]; // 26 - Test Case CSW ; 59 - Test Case IL\r\n\t\t\tthis.uploading = true;\r\n\t\t\tthis.initTests(null, this.parameters.testSuites.length);\r\n\t\t\tthis.parameters.testSuites.forEach((suite) => {\r\n\t\t\t\tthis.abstractItemService.getAbstractItems([Number(this.selectedProjectId)], testCaseItemType, undefined,\r\n\t\t\t\t\tundefined, undefined, undefined, undefined, [suite.id],\r\n\t\t\t\t\t['createdDate.asc'], 0, 1)\r\n\t\t\t\t\t\t.pipe(mergeMap((value) => {\r\n\t\t\t\t\t\t\tif (value.data.length > 0) {\r\n\t\t\t\t\t\t\t\tconst itemIDTestCase = value.data[0].id;\r\n\t\t\t\t\t\t\t\tthis.saveResultTest(ResultStatus.Passed, suite.id);\r\n\t\t\t\t\t\t\t\treturn this.patchTestCase(suite, itemIDTestCase);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.saveResultTest(ResultStatus.FileNotInJama, suite.id);\r\n\t\t\t\t\t\t\t\treturn new Observable();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)).subscribe((success) =>{\r\n\t\t\t\t\t\tthis.toastr.success('Test cases description and steps updated');\r\n\t\t\t\t\t\tthis.uploading = false;\r\n\t\t\t\t\t}, (error) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.toastr.error('Couldn\\'t update the test cases: ' + error.message);\r\n\t\t\t\t\t\tthis.uploading = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t}\r\n\r\n\r\n\tprivate patchTestCase(suite: TestSuite, itemIDTestCase: number): Observable<any> {\r\n\t\tvar updateDescription: RequestPatchOperation = {\r\n\t\t\top: \"replace\",\r\n\t\t\tpath: \"/fields/description\",\r\n\t\t\tvalue: this.testSuiteService.getDescription(suite.name)\r\n\t\t};\r\n\r\n\t\tvar updateSteps: RequestPatchOperation = {\r\n\t\t\top: \"replace\",\r\n\t\t\tpath: \"/fields/testCaseSteps\",\r\n\t\t\tvalue: this.testSuiteService.getTestCaseStepsToUpdate(suite)\r\n\t\t};\r\n\r\n\t\treturn this.itemsService.patchItem([updateSteps, updateDescription], itemIDTestCase);\r\n\t}\r\n\r\n\tpublic doRun() {\r\n\t\tthis.uploading = true;\r\n\t\tif (this.selectedTestCycleId !== undefined) {\r\n\t\t\tthis.updateTestRunsInTheTestCycle(this.selectedTestCycleId, this.parameters.testSuites, this._userId, this.actualResults, this._selectedReleaseId);\r\n\t\t} else {\r\n\r\n\t\t\tconst testGroupsToInclude: Array<number> = this.selectedTestGroups.map((a) => a.id);\r\n\r\n\t\t\tthis.createTestCycle(Number(this.selectedProjectId), Number(this.selectedTestPlanId), this.nameForNewTestCycle, testGroupsToInclude)\r\n\t\t\t\t.subscribe((result) => {\r\n\t\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t\tthis.toastr.success('Test cycle ' + this.nameForNewTestCycle + ' created');\r\n\t\t\t\t\t\t\tthis.updateTestRunsInTheLastCycleOfTheTestPlan(this.selectedTestPlanId, this.parameters.testSuites, this._userId, this.actualResults, this._selectedReleaseId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, (error) => {\r\n\t\t\t\t\t\tthis.uploading = false;\r\n\t\t\t\t\t\tthis.toastr.error('Couldn\\'t create the test cycle: ' + error.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic areResultsReady() {\r\n\t\treturn this.currentTestsRun === this.totalTestsRun && this.totalTestsRun > 0;\r\n\t}\r\n\r\n\tpublic areResultsWrong() {\r\n\t\treturn this.testsUpload[ResultStatus.NotUpdated].length > 0 || this.testsUpload[ResultStatus.FileNotInJama].length > 0;\r\n\t}\r\n\r\n\tprivate updateTestRunsInTheTestCycle(testCycleId, testSuites: TestSuite[], userId: number, actualResults: string, executedInVersion?: number) {\r\n\t\tthis.getTestRuns(testCycleId).subscribe((tests) => {\r\n\t\t\tif (tests.pageInfo.startIndex === 0) {\r\n\t\t\t\t\tthis.initTests(tests.totalResults, testSuites.length);\r\n\t\t\t\t\tthis.testsUpload[ResultStatus.FileNotInJama] = testSuites.map(ts => ts.id);\r\n\t\t\t}\r\n\r\n\t\t\ttests.testruns.forEach(testrun => {\r\n\t\t\t\tthis.getKeyById(testrun.fields.testCase).subscribe(\r\n\t\t\t\t\tkey => {\r\n\t\t\t\t\t\t\t\tconst testSuite = testSuites.find(ts => ts.id === key || ts.id === testrun.fields.name);\r\n\t\t\t\t\t\t\t\tif (testSuite) {\r\n\t\t\t\t\t\t\t\t\tthis.testsUpload[ResultStatus.FileNotInJama].splice(this.testsUpload[ResultStatus.FileNotInJama].indexOf(testSuite.name), 1);\r\n\t\t\t\t\t\t\t\t\tthis.updateTestRunForTestCase(testSuite, testrun, userId, actualResults, executedInVersion);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.saveResultTest(ResultStatus.FileNotInJama, testrun.fields.name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate updateTestRunForTestCase(testSuite, testrun, userId: number, actualResults: string, executedInVersion?: number) {\r\n\t\tthis.setTestRunStatus(testrun, testSuite, userId, actualResults, executedInVersion)\r\n\t\t\t.subscribe(\r\n\t\t\t\t(value) => {\r\n\t\t\t\t\tif(executedInVersion)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.setExecutedInVersion(testrun, executedInVersion, this.updateTestCaseVersion);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.saveResultTest(this.testSuiteService.getStatus(testSuite) as ResultStatus, testrun.fields.name);\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t\tthis.saveResultTest(ResultStatus.NotUpdated, testrun.fields.name);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t}\r\n\r\n\tprivate setExecutedInVersion(testrun: TestRun, executedInVersion: number, updateTestCaseVersion: boolean){\r\n\t\tvar updateExecutedInVersion: RequestPatchOperation = {\r\n\t\t\top: \"add\",\r\n\t\t\tpath: \"/fields/tested_in_version$37\",\r\n\t\t\tvalue: executedInVersion\r\n\t\t};\r\n\r\n\t\tthis.testrunsService.patchTestRun([updateExecutedInVersion], testrun.id).subscribe();\r\n\r\n\t\tif(updateTestCaseVersion) {\r\n\t\t\tvar updateTestCaseLastTestedVersion: RequestPatchOperation = {\r\n\t\t\t\top: \"add\",\r\n\t\t\t\tpath: \"/fields/last_tested_version$26\",\r\n\t\t\t\tvalue: executedInVersion\r\n\t\t\t};\r\n\t\t\tthis.itemsService.patchItem([updateTestCaseLastTestedVersion], testrun.fields[\"testCase\"]).subscribe();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate saveResultTest(status: ResultStatus, name: string) {\r\n\t\tthis.testsRun[status]++;\r\n\t\tthis.currentTestsRun++;\r\n\r\n\t\tthis.testsRunPercentage = 100 * this.currentTestsRun / this.totalTestsRun;\r\n\t\tthis.header.go(this.testsRunPercentage);\r\n\r\n\t\tif (status !== ResultStatus.Blocked && status !== ResultStatus.FileNotInJama) {\r\n\t\t\tthis.testsUpload[status].push(name);\r\n\t\t}\r\n\r\n\t\tif (this.areResultsReady()) {\r\n\t\t\tthis.uploading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initTests(totalTests: number, totalSuites: number) {\r\n\t\tthis.totalTestsRun = totalTests || totalSuites;\r\n\t\tthis.totalSuites = totalSuites;\r\n\t\tthis.currentTestsRun = 0;\r\n\r\n\t\tObject.keys(this.testsRun).forEach(testRun => this.testsRun[testRun] = 0);\r\n\t\tObject.keys(this.testsUpload).forEach(testWrong => this.testsUpload[testWrong] = []);\r\n\t}\r\n\r\n\tprivate getKeyById(testCaseId: number): Observable<string> {\r\n\t\treturn this.itemsService.getItem(testCaseId)\r\n\t\t\t.pipe(map(value => {\r\n\t\t\t\treturn value.data.documentKey;\r\n\t\t\t}));\r\n\t}\r\n\r\n\tprivate getTestRuns(testCycleId: number) {\r\n\t\tconst list: Array<number> = [];\r\n\t\tlist.push(testCycleId);\r\n\t\tconst itemsPerPage = 20;\r\n\t\treturn range(0, 100)\r\n\t\t\t.pipe(\r\n\t\t\t\tconcatMap(currentIndex  => this.testrunsService.getTestRuns(list, undefined, undefined, undefined, currentIndex * itemsPerPage, itemsPerPage)),\r\n\t\t\t\ttakeWhile( (value: TestRunDataListWrapper) => value && value.data && value.data.length > 0),\r\n\t\t\t\tmap( value => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttestruns: value.data,\r\n\t\t\t\t\t\ttotalResults: value.meta.pageInfo.totalResults,\r\n\t\t\t\t\t\tpageInfo: value.meta.pageInfo\r\n\t\t\t\t\t};\r\n\t\t\t\t}));\r\n\t}\r\n\r\n\tprivate setTestRunStatus(testRun: TestRun, testSuite: TestSuite, userId: number, actualResults, executedInVersion?: number): Observable<number> {\r\n\r\n\t\tlet status;\r\n\r\n\t\tswitch (this.testSuiteService.getStatus(testSuite)) {\r\n\t\t\tcase 'passed':\r\n\t\t\t\tstatus = 'PASSED';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blocked':\r\n\t\t\t\tstatus = 'BLOCKED';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'failed':\r\n\t\t\t\tstatus = 'FAILED';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (status) {\r\n\t\t\tconst body: RequestTestRun = {\r\n\t\t\t\t'fields': {\r\n\t\t\t\t\t'testRunSteps':  testRun.fields.testRunSteps.map(s => {\r\n\t\t\t\t\t\ts.status = status;\r\n\t\t\t\t\t\treturn s;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t'actualResults': this.testSuiteService.getActualResults(testSuite, actualResults),\r\n\t\t\t\t\t'assignedTo':    userId,\r\n\t\t\t\t\t'tested_version$37' : executedInVersion\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn this.testrunsService.updateTestRun(body, testRun.id)\r\n\t\t\t\t.pipe(map((value) => {\r\n\t\t\t\t\treturn value.status;\r\n\t\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthrowError('Status not supported!');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate createTestCycle(project: number, testPlanId: number, testCycleName: string, testGroupsToInclude: Array<number>): Observable<boolean> {\r\n\r\n\t\tconst startDate: string = format(new Date(), 'YYYY-MM-DD');\r\n\t\tconst endDate: string = format(new Date(), 'YYYY-MM-DD');\r\n\r\n\t\tconst requestTestCycle: RequestTestCycle = {\r\n\t\t\t'fields':                  {\r\n\t\t\t\t'name':      testCycleName,\r\n\t\t\t\t'project':   project,\r\n\t\t\t\t'startDate': startDate,\r\n\t\t\t\t'endDate':   endDate\r\n\t\t\t},\r\n\t\t\t'testRunGenerationConfig': {\r\n\t\t\t\t'testGroupsToInclude':      testGroupsToInclude,\r\n\t\t\t\t'testRunStatusesToInclude': ['PASSED', 'NOT_RUN', 'INPROGRESS', 'FAILED', 'BLOCKED']\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn this.testplansService.createTestCycle(requestTestCycle, testPlanId)\r\n\t\t\t.pipe(map((createdResponse) => {\r\n\t\t\t\t\treturn createdResponse !== null;\r\n\t\t\t\t}\r\n\t\t\t));\r\n\t}\r\n\r\n\tprivate updateTestRunsInTheLastCycleOfTheTestPlan(testPlanId: number, testSuites: TestSuite[], userId: number, actualResults: string, executedInVersion?: number) {\r\n\t\tthis.getLastTestCycleByTestPlanId(testPlanId)\r\n\t\t\t.subscribe(\r\n\t\t\t\t(lastTestCycle) => {\r\n\t\t\t\t\tthis.updateTestRunsInTheTestCycle(lastTestCycle, testSuites, userId, actualResults, executedInVersion);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\r\n\tprivate getLastTestCycleByTestPlanId(testPlanId: number): Observable<number> {\r\n\t\treturn this.testplansService.getTestCycles(testPlanId, 0, 50)\r\n\t\t\t.pipe(map((value) => {\r\n\t\t\t\t\tif (value.data && value.data.length > 0) {\r\n\t\t\t\t\t\treturn value.data[value.data.length - 1].id;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t));\r\n\t}\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule } from '@angular/http';\r\nimport { Configuration } from './configuration';\r\n\r\nimport { AbstractitemsService } from './api/abstractitems.service';\r\nimport { ActivitiesService } from './api/activities.service';\r\nimport { AttachmentsService } from './api/attachments.service';\r\nimport { BaselinesService } from './api/baselines.service';\r\nimport { CommentsService } from './api/comments.service';\r\nimport { FilesService } from './api/files.service';\r\nimport { FiltersService } from './api/filters.service';\r\nimport { ItemsService } from './api/items.service';\r\nimport { ItemtypesService } from './api/itemtypes.service';\r\nimport { PicklistoptionsService } from './api/picklistoptions.service';\r\nimport { PicklistsService } from './api/picklists.service';\r\nimport { ProjectsService } from './api/projects.service';\r\nimport { RelationshipsService } from './api/relationships.service';\r\nimport { RelationshiptypesService } from './api/relationshiptypes.service';\r\nimport { ReleasesService } from './api/releases.service';\r\nimport { SystemService } from './api/system.service';\r\nimport { TagsService } from './api/tags.service';\r\nimport { TestcyclesService } from './api/testcycles.service';\r\nimport { TestplansService } from './api/testplans.service';\r\nimport { TestrunsService } from './api/testruns.service';\r\nimport { UsergroupsService } from './api/usergroups.service';\r\nimport { UsersService } from './api/users.service';\r\n\r\n@NgModule({\r\n\timports:      [CommonModule, HttpModule],\r\n\tdeclarations: [],\r\n\texports:      [],\r\n\tproviders:    [AbstractitemsService, ActivitiesService, AttachmentsService, BaselinesService, CommentsService, FilesService, FiltersService, ItemsService, ItemtypesService, PicklistoptionsService, PicklistsService, ProjectsService, RelationshipsService, RelationshiptypesService, ReleasesService, SystemService, TagsService, TestcyclesService, TestplansService, TestrunsService, UsergroupsService, UsersService]\r\n})\r\nexport class ApiModule {\r\n\tpublic static forConfig(configurationFactory: () => Configuration): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule:  ApiModule,\r\n\t\t\tproviders: [{provide: Configuration, useFactory: configurationFactory}]\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractItemDataWrapper } from '../model/abstractItemDataWrapper';\r\nimport { AbstractVersionedItemDataWrapper } from '../model/abstractVersionedItemDataWrapper';\r\nimport { ItemDataListWrapper } from '../model/itemDataListWrapper';\r\nimport { VersionDataListWrapper } from '../model/versionDataListWrapper';\r\nimport { VersionDataWrapper } from '../model/versionDataWrapper';\r\nimport { VersionedRelationshipDataListWrapper } from '../model/versionedRelationshipDataListWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class AbstractitemsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Search for items, test plans, test cycles, test runs, or attachments\r\n\t *\r\n\t * @param project\r\n\t * @param itemType\r\n\t * @param documentKey\r\n\t * @param release\r\n\t * @param createdDate Filter datetime fields after a single date or within a range of values. Provide one or two values in ISO8601 format (milliseconds or seconds) - \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ\\&quot; or \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ\\&quot;\r\n\t * @param modifiedDate Filter datetime fields after a single date or within a range of values. Provide one or two values in ISO8601 format (milliseconds or seconds) - \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ\\&quot; or \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ\\&quot;\r\n\t * @param lastActivityDate Filter datetime fields after a single date or within a range of values. Provide one or two values in ISO8601 format (milliseconds or seconds) - \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ\\&quot; or \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ\\&quot;\r\n\t * @param contains Filter on the text contents of the item. Strings taken literally. Multiple &#39;contains&#39; values will be bitwise ORed.\r\n\t * @param sortBy Sort orders can be added with the name of the field by which to sort, followed by .asc or .desc (e.g. &#39;name.asc&#39; or &#39;modifiedDate.desc&#39;). If not set, this defaults to sorting by sequence.asc and then documentKey.asc\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getAbstractItems(project?: Array<number>, itemType?: Array<number>, documentKey?: Array<string>, release?: Array<number>, createdDate?: Array<string>, modifiedDate?: Array<string>, lastActivityDate?: Array<string>, contains?: Array<string>, sortBy?: Array<string>, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project) {\r\n\t\t\tproject.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('project', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (itemType) {\r\n\t\t\titemType.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('itemType', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (documentKey) {\r\n\t\t\tdocumentKey.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('documentKey', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (release) {\r\n\t\t\trelease.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('release', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (createdDate) {\r\n\t\t\tcreatedDate.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('createdDate', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (modifiedDate) {\r\n\t\t\tmodifiedDate.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('modifiedDate', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (lastActivityDate) {\r\n\t\t\tlastActivityDate.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('lastActivityDate', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (contains) {\r\n\t\t\tcontains.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('contains', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (sortBy) {\r\n\t\t\tsortBy.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('sortBy', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/abstractitems`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get any item, test plan, test cycle, test run, or attachment with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItem(id: number, include?: Array<string>): Observable<AbstractItemDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/abstractitems/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the numbered version for the item with the specified ID\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionOnItem(versionNum: number, id: number, include?: Array<string>): Observable<VersionDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionOnItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/abstractitems/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the  snapshot of the item at the specified version\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem(versionNum: number, id: number, include?: Array<string>): Observable<AbstractVersionedItemDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionedItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionedItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/abstractitems/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}/versioneditem`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versioned relationships that were associated to the item at the specified time\r\n\t *\r\n\t * @param id\r\n\t * @param timestamp Get relationships for the specified item at this date and time. Requires ISO8601 formatting (milliseconds or seconds) - \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ\\&quot; or \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ\\&quot;\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedRelationships(id: number, timestamp: string, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionedRelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionedRelationships.');\r\n\t\t}\r\n\t\tif (timestamp === null || timestamp === undefined) {\r\n\t\t\tthrow new Error('Required parameter timestamp was null or undefined when calling getVersionedRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (timestamp !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('timestamp', <any>timestamp);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/abstractitems/${encodeURIComponent(String(id))}/versionedrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versions for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionsOnItem(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionsOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/abstractitems/${encodeURIComponent(String(id))}/versions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { ActivityDataListWrapper } from '../model/activityDataListWrapper';\r\nimport { ActivityDataWrapper } from '../model/activityDataWrapper';\r\nimport { ItemDataListWrapper } from '../model/itemDataListWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class ActivitiesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get all activities in the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param eventType Event type to filter on. More than one event type can be chosen\r\n\t * @param objectType Object type to filter on. More than one object type can be chosen\r\n\t * @param itemType ID of item type to filter on. More than one item type can be chosen\r\n\t * @param date Filter datetime fields after a single date or within a range of values. Provide one or two values in ISO8601 format (milliseconds or seconds) - \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ\\&quot; or \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ\\&quot;\r\n\t * @param deleteEvents Get item delete events only\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getActivities(project: number, eventType?: Array<string>, objectType?: Array<string>, itemType?: Array<number>, date?: Array<string>, deleteEvents?: boolean, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ActivityDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getActivities.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (eventType) {\r\n\t\t\teventType.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('eventType', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (objectType) {\r\n\t\t\tobjectType.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('objectType', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (itemType) {\r\n\t\t\titemType.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('itemType', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (date) {\r\n\t\t\tdate.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('date', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (deleteEvents !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('deleteEvents', <any>deleteEvents);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/activities`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the activity with the specified ID\r\n\t *\r\n\t * @param activityId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getActivityById(activityId: number, include?: Array<string>): Observable<ActivityDataWrapper> {\r\n\t\tif (activityId === null || activityId === undefined) {\r\n\t\t\tthrow new Error('Required parameter activityId was null or undefined when calling getActivityById.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/activities/${encodeURIComponent(String(activityId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all items affected by the activity with the specified ID\r\n\t *\r\n\t * @param activityId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getAffectedItems(activityId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (activityId === null || activityId === undefined) {\r\n\t\t\tthrow new Error('Required parameter activityId was null or undefined when calling getAffectedItems.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/activities/${encodeURIComponent(String(activityId))}/affecteditems`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Restore item(s) associated with a delete activity.\r\n\t *\r\n\t * @param activityId\r\n\t */\r\n\tpublic restoreItems(activityId: number): Observable<AbstractRestResponse> {\r\n\t\tif (activityId === null || activityId === undefined) {\r\n\t\t\tthrow new Error('Required parameter activityId was null or undefined when calling restoreItems.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/activities/${encodeURIComponent(String(activityId))}/restore`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","export * from './abstractitems.service';\r\nimport { AbstractitemsService } from './abstractitems.service';\r\nimport { ActivitiesService } from './activities.service';\r\nimport { AttachmentsService } from './attachments.service';\r\nimport { BaselinesService } from './baselines.service';\r\nimport { CommentsService } from './comments.service';\r\nimport { FilesService } from './files.service';\r\nimport { FiltersService } from './filters.service';\r\nimport { ItemsService } from './items.service';\r\nimport { ItemtypesService } from './itemtypes.service';\r\nimport { PicklistoptionsService } from './picklistoptions.service';\r\nimport { PicklistsService } from './picklists.service';\r\nimport { ProjectsService } from './projects.service';\r\nimport { RelationshipsService } from './relationships.service';\r\nimport { RelationshiptypesService } from './relationshiptypes.service';\r\nimport { ReleasesService } from './releases.service';\r\nimport { SystemService } from './system.service';\r\nimport { TagsService } from './tags.service';\r\nimport { TestcyclesService } from './testcycles.service';\r\nimport { TestplansService } from './testplans.service';\r\nimport { TestrunsService } from './testruns.service';\r\nimport { UsergroupsService } from './usergroups.service';\r\nimport { UsersService } from './users.service';\r\n\r\nexport * from './activities.service';\r\nexport * from './attachments.service';\r\nexport * from './baselines.service';\r\nexport * from './comments.service';\r\nexport * from './files.service';\r\nexport * from './filters.service';\r\nexport * from './items.service';\r\nexport * from './itemtypes.service';\r\nexport * from './picklistoptions.service';\r\nexport * from './picklists.service';\r\nexport * from './projects.service';\r\nexport * from './relationships.service';\r\nexport * from './relationshiptypes.service';\r\nexport * from './releases.service';\r\nexport * from './system.service';\r\nexport * from './tags.service';\r\nexport * from './testcycles.service';\r\nexport * from './testplans.service';\r\nexport * from './testruns.service';\r\nexport * from './usergroups.service';\r\nexport * from './users.service';\r\nexport const APIS = [AbstractitemsService, ActivitiesService, AttachmentsService, BaselinesService, CommentsService, FilesService, FiltersService, ItemsService, ItemtypesService, PicklistoptionsService, PicklistsService, ProjectsService, RelationshipsService, RelationshiptypesService, ReleasesService, SystemService, TagsService, TestcyclesService, TestplansService, TestrunsService, UsergroupsService, UsersService];\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { AttachmentDataWrapper } from '../model/attachmentDataWrapper';\r\nimport { CommentDataListWrapper } from '../model/commentDataListWrapper';\r\nimport { FormDataMultiPart } from '../model/formDataMultiPart';\r\nimport { LockDataWrapper } from '../model/lockDataWrapper';\r\nimport { RequestLock } from '../model/requestLock';\r\nimport { VersionDataListWrapper } from '../model/versionDataListWrapper';\r\nimport { VersionDataWrapper } from '../model/versionDataWrapper';\r\nimport { VersionedAttachmentDataWrapper } from '../model/versionedAttachmentDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class AttachmentsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Download attachment file from the attachment with the specified ID\r\n\t *\r\n\t * @param attachmentId\r\n\t */\r\n\tpublic downloadFile(attachmentId: number): Observable<{}> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling downloadFile.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/file`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the attachment with the specified ID\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getAttachmentItem(attachmentId: number, include?: Array<string>): Observable<AttachmentDataWrapper> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling getAttachmentItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all comments for the item with the specified ID\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param rootCommentsOnly\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemComments(attachmentId: number, startAt?: number, maxResults?: number, rootCommentsOnly?: boolean, include?: Array<string>): Observable<CommentDataListWrapper> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling getItemComments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (rootCommentsOnly !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('rootCommentsOnly', <any>rootCommentsOnly);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/comments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the locked state, last locked date, and last locked by user for the item with the specified ID\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLock(attachmentId: number, include?: Array<string>): Observable<LockDataWrapper> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling getLock.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/lock`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the numbered version for the item with the specified ID\r\n\t *\r\n\t * @param versionNum\r\n\t * @param attachmentId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionOnItem1(versionNum: number, attachmentId: number, include?: Array<string>): Observable<VersionDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionOnItem1.');\r\n\t\t}\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling getVersionOnItem1.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/versions/${encodeURIComponent(String(versionNum))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the  snapshot of the attachment at the specified version\r\n\t *\r\n\t * @param versionNum\r\n\t * @param attachmentId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem1(versionNum: number, attachmentId: number, include?: Array<string>): Observable<VersionedAttachmentDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionedItem1.');\r\n\t\t}\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling getVersionedItem1.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/versions/${encodeURIComponent(String(versionNum))}/versioneditem`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versions for the item with the specified ID\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionsOnItem1(attachmentId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionDataListWrapper> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling getVersionsOnItem1.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/versions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the locked state of the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param attachmentId\r\n\t */\r\n\tpublic updateLock(body: RequestLock, attachmentId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateLock.');\r\n\t\t}\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling updateLock.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/lock`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Upload attachment file to the attachment with the specified ID\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param body\r\n\t */\r\n\tpublic uploadFile(attachmentId: number, body?: FormDataMultiPart): Observable<AbstractRestResponse> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling uploadFile.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/attachments/${encodeURIComponent(String(attachmentId))}/file`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { BaselineDataListWrapper } from '../model/baselineDataListWrapper';\r\nimport { BaselineDataWrapper } from '../model/baselineDataWrapper';\r\nimport { BaselineItemDataListWrapper } from '../model/baselineItemDataListWrapper';\r\nimport { BaselineItemDataWrapper } from '../model/baselineItemDataWrapper';\r\nimport { VersionedRelationshipDataListWrapper } from '../model/versionedRelationshipDataListWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class BaselinesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get the baseline with the specified ID\r\n\t *\r\n\t * @param baselineId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getBaseline(baselineId: number, include?: Array<string>): Observable<BaselineDataWrapper> {\r\n\t\tif (baselineId === null || baselineId === undefined) {\r\n\t\t\tthrow new Error('Required parameter baselineId was null or undefined when calling getBaseline.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/baselines/${encodeURIComponent(String(baselineId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all baselines in the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getBaselines(project: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<BaselineDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getBaselines.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/baselines`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versioned relationships for the item in the baseline\r\n\t *\r\n\t * @param itemId\r\n\t * @param baselineId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getRelationshipsForVersion(itemId: number, baselineId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionedRelationshipDataListWrapper> {\r\n\t\tif (itemId === null || itemId === undefined) {\r\n\t\t\tthrow new Error('Required parameter itemId was null or undefined when calling getRelationshipsForVersion.');\r\n\t\t}\r\n\t\tif (baselineId === null || baselineId === undefined) {\r\n\t\t\tthrow new Error('Required parameter baselineId was null or undefined when calling getRelationshipsForVersion.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/baselines/${encodeURIComponent(String(baselineId))}/versioneditems/${encodeURIComponent(String(itemId))}/versionedrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the baseline item with the specified ID in a baseline with the specified ID\r\n\t *\r\n\t * @param itemId\r\n\t * @param baselineId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem(itemId: number, baselineId: number, include?: Array<string>): Observable<BaselineItemDataWrapper> {\r\n\t\tif (itemId === null || itemId === undefined) {\r\n\t\t\tthrow new Error('Required parameter itemId was null or undefined when calling getVersionedItem.');\r\n\t\t}\r\n\t\tif (baselineId === null || baselineId === undefined) {\r\n\t\t\tthrow new Error('Required parameter baselineId was null or undefined when calling getVersionedItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/baselines/${encodeURIComponent(String(baselineId))}/versioneditems/${encodeURIComponent(String(itemId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all baseline items in a baseline with the specified ID\r\n\t *\r\n\t * @param baselineId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItems(baselineId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<BaselineItemDataListWrapper> {\r\n\t\tif (baselineId === null || baselineId === undefined) {\r\n\t\t\tthrow new Error('Required parameter baselineId was null or undefined when calling getVersionedItems.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/baselines/${encodeURIComponent(String(baselineId))}/versioneditems`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { CommentDataListWrapper } from '../model/commentDataListWrapper';\r\nimport { CommentDataWrapper } from '../model/commentDataWrapper';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { RequestComment } from '../model/requestComment';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class CommentsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new comment\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic addComment(body: RequestComment): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addComment.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/comments`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the comment with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getComment(id: number, include?: Array<string>): Observable<CommentDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getComment.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/comments/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all comments viewable by the current user\r\n\t *\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param rootCommentsOnly whether to show only root comments; true to get only root comments, without their comment replies\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getComments(startAt?: number, maxResults?: number, rootCommentsOnly?: boolean, include?: Array<string>): Observable<CommentDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (rootCommentsOnly !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('rootCommentsOnly', <any>rootCommentsOnly);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/comments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all reply comments for the comment with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getReplies(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<CommentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getReplies.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/comments/${encodeURIComponent(String(id))}/replies`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class FilesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Download attachment file from the attachment with the specified Jama URL\r\n\t *\r\n\t * @param url\r\n\t */\r\n\tpublic downloadFile(url: string): Observable<{}> {\r\n\t\tif (url === null || url === undefined) {\r\n\t\t\tthrow new Error('Required parameter url was null or undefined when calling downloadFile.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (url !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('url', <any>url);\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/files`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { FilterDataListWrapper } from '../model/filterDataListWrapper';\r\nimport { FilterDataWrapper } from '../model/filterDataWrapper';\r\nimport { ItemDataListWrapper } from '../model/itemDataListWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class FiltersService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get the filter with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getFilter(id: number, include?: Array<string>): Observable<FilterDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getFilter.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/filters/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all filters in the project with the specified ID viewable by the current user\r\n\t *\r\n\t * @param project\r\n\t * @param author\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getFilters(project: number, author?: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<FilterDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getFilters.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (author !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('author', <any>author);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/filters`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all result items for the filter with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getResults(id: number, project?: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getResults.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/filters/${encodeURIComponent(String(id))}/results`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { ActivityDataListWrapper } from '../model/activityDataListWrapper';\r\nimport { AttachmentDataListWrapper } from '../model/attachmentDataListWrapper';\r\nimport { CommentDataListWrapper } from '../model/commentDataListWrapper';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { DuplicateConfig } from '../model/duplicateConfig';\r\nimport { ItemDataListWrapper } from '../model/itemDataListWrapper';\r\nimport { ItemDataWrapper } from '../model/itemDataWrapper';\r\nimport { LinkDataListWrapper } from '../model/linkDataListWrapper';\r\nimport { LinkDataWrapper } from '../model/linkDataWrapper';\r\nimport { LocationDataWrapper } from '../model/locationDataWrapper';\r\nimport { LockDataWrapper } from '../model/lockDataWrapper';\r\nimport { RelationshipDataListWrapper } from '../model/relationshipDataListWrapper';\r\nimport { RequestItem } from '../model/requestItem';\r\nimport { RequestItemAttachment } from '../model/requestItemAttachment';\r\nimport { RequestItemSyncedItem } from '../model/requestItemSyncedItem';\r\nimport { RequestItemTag } from '../model/requestItemTag';\r\nimport { RequestLink } from '../model/requestLink';\r\nimport { RequestLock } from '../model/requestLock';\r\nimport { RequestMoveLocation } from '../model/requestMoveLocation';\r\nimport { RequestPatchOperation } from '../model/requestPatchOperation';\r\nimport { RequestTransition } from '../model/requestTransition';\r\nimport { SyncStatusDataWrapper } from '../model/syncStatusDataWrapper';\r\nimport { TagDataListWrapper } from '../model/tagDataListWrapper';\r\nimport { TagDataWrapper } from '../model/tagDataWrapper';\r\nimport { VersionDataListWrapper } from '../model/versionDataListWrapper';\r\nimport { VersionDataWrapper } from '../model/versionDataWrapper';\r\nimport { VersionedItemDataWrapper } from '../model/versionedItemDataWrapper';\r\nimport { WorkflowTransitionDataListWrapper } from '../model/workflowTransitionDataListWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class ItemsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing attachment to the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addAttachmentToItem(body: RequestItemAttachment, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addAttachmentToItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addAttachmentToItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/attachments`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new item\r\n\t *\r\n\t * @param body\r\n\t * @param setGlobalIdManually This value must be set to true if you attempt to manually set the Global ID field of an item\r\n\t */\r\n\tpublic addItem(body: RequestItem, setGlobalIdManually?: boolean): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (setGlobalIdManually !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('setGlobalIdManually', <any>setGlobalIdManually);\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items`, body, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new link for the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addItemLink(body: RequestLink, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/links`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing tag to the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addTagToItem(body: RequestItemTag, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addTagToItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addTagToItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/tags`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing item from the Global ID pool of the item with the specified ID (break sync)\r\n\t *\r\n\t * @param syncedItemId\r\n\t * @param id\r\n\t */\r\n\tpublic breakSyncOnItem(syncedItemId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (syncedItemId === null || syncedItemId === undefined) {\r\n\t\t\tthrow new Error('Required parameter syncedItemId was null or undefined when calling breakSyncOnItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling breakSyncOnItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/synceditems/${encodeURIComponent(String(syncedItemId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing item to the Global ID pool of the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic connectItemToGlobalIDPool(body: RequestItemSyncedItem, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling connectItemToGlobalIDPool.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling connectItemToGlobalIDPool.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/synceditems`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the item with the specified ID (item becomes inactive and can be un-deleted if necessary)\r\n\t *\r\n\t * @param id\r\n\t */\r\n\tpublic deleteItem(id: number): Observable<AbstractRestResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param id\r\n\t */\r\n\tpublic deleteItemLink(linkId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling deleteItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a duplicate of item\r\n\t * Copies the name and description fields. Only items without children can be have a duplicate created.\r\n\t * @param id\r\n\t * @param body\r\n\t */\r\n\tpublic duplicateItem(id: number, body?: DuplicateConfig): Observable<CreatedResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling duplicateItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/duplicate`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Executes a workflow transition for the item with the specified ID. Valid transitions can be found at /items/{id}/workflowtransitionoptions\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic executeTransition(body: RequestTransition, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling executeTransition.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling executeTransition.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/workflowtransitions`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all activities for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getActivities(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ActivityDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getActivities.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/activities`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all attachments for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getAttachments(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AttachmentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getAttachments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/attachments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all children items for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getChildItems(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getChildItems.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/children`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all downstream related items for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getDownstreamRelated(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getDownstreamRelated.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/downstreamrelated`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all downstream relationships for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getDownstreamRelationships(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getDownstreamRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/downstreamrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItem(id: number, include?: Array<string>): Observable<ItemDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all comments for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param rootCommentsOnly\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemComments(id: number, startAt?: number, maxResults?: number, rootCommentsOnly?: boolean, include?: Array<string>): Observable<CommentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemComments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (rootCommentsOnly !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('rootCommentsOnly', <any>rootCommentsOnly);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/comments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all links for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemLinks(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<LinkDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemLinks.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/links`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all items in the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param rootOnly Set this to true to only get root-level nodes from the item tree\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItems(project: number, rootOnly?: boolean, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getItems.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (rootOnly !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('rootOnly', <any>rootOnly);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLinkById(linkId: number, id: number, include?: Array<string>): Observable<LinkDataWrapper> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling getLinkById.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLinkById.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the location for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLocation(id: number, include?: Array<string>): Observable<LocationDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLocation.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/location`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the locked state, last locked date, and last locked by user for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLock(id: number, include?: Array<string>): Observable<LockDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLock.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/lock`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the parent item for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getParentItem(id: number, include?: Array<string>): Observable<ItemDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getParentItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/parent`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all synchronized items for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getSyncItems(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getSyncItems.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/synceditems`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the sync status for the synced item with the specified ID\r\n\t *\r\n\t * @param syncedItemId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getSyncStatus(syncedItemId: number, id: number, include?: Array<string>): Observable<SyncStatusDataWrapper> {\r\n\t\tif (syncedItemId === null || syncedItemId === undefined) {\r\n\t\t\tthrow new Error('Required parameter syncedItemId was null or undefined when calling getSyncStatus.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getSyncStatus.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/synceditems/${encodeURIComponent(String(syncedItemId))}/syncstatus`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tag with the specified ID\r\n\t *\r\n\t * @param tagId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagOnItem(tagId: number, id: number, include?: Array<string>): Observable<TagDataWrapper> {\r\n\t\tif (tagId === null || tagId === undefined) {\r\n\t\t\tthrow new Error('Required parameter tagId was null or undefined when calling getTagOnItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTagOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/tags/${encodeURIComponent(String(tagId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all tags for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagsOnItem(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TagDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTagsOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/tags`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all upstream related items for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUpstreamRelated(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getUpstreamRelated.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/upstreamrelated`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all upstream relationships for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUpstreamRelationships(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getUpstreamRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/upstreamrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the numbered version for the item with the specified ID\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionOnItem2(versionNum: number, id: number, include?: Array<string>): Observable<VersionDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionOnItem2.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionOnItem2.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the  snapshot of the item at the specified version\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem2(versionNum: number, id: number, include?: Array<string>): Observable<VersionedItemDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionedItem2.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionedItem2.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}/versioneditem`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versions for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionsOnItem2(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionsOnItem2.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/versions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all valid workflow transitions that can be made on the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getWorkflowTransitionOptions(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<WorkflowTransitionDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getWorkflowTransitionOptions.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/workflowtransitionoptions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic patchItem(body: Array<RequestPatchOperation>, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling patchItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling patchItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.patch<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t * @param setGlobalIdManually This value must be set to true if you attempt to manually set the Global ID field of an item\r\n\t */\r\n\tpublic putItem(body: RequestItem, id: number, setGlobalIdManually?: boolean): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling putItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling putItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (setGlobalIdManually !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('setGlobalIdManually', <any>setGlobalIdManually);\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing attachment from the item\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param id\r\n\t */\r\n\tpublic removeAttachmentFromItem(attachmentId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling removeAttachmentFromItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeAttachmentFromItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/attachments/${encodeURIComponent(String(attachmentId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing tag from the item with the specified ID\r\n\t *\r\n\t * @param tagId\r\n\t * @param id\r\n\t */\r\n\tpublic removeTagFromItem(tagId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (tagId === null || tagId === undefined) {\r\n\t\t\tthrow new Error('Required parameter tagId was null or undefined when calling removeTagFromItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeTagFromItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/tags/${encodeURIComponent(String(tagId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateItemLink(linkId: number, body: RequestLink, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the location for the item with the specified ID as an asynchronous request (a successful response signifies that the work was started and a work identifier is given. This identifier will be used in a future feature). Any child items are moved along with this item. Note that this currently only supports moving items between projects\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateLocation(body: RequestMoveLocation, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateLocation.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateLocation.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/location`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the locked state of the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateLock(body: RequestLock, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateLock.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateLock.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/items/${encodeURIComponent(String(id))}/lock`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { ItemTypeDataListWrapper } from '../model/itemTypeDataListWrapper';\r\nimport { ItemTypeDataWrapper } from '../model/itemTypeDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class ItemtypesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get the item type with the specified ID\r\n\t *\r\n\t * @param itemTypeId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItem(itemTypeId: number, include?: Array<string>): Observable<ItemTypeDataWrapper> {\r\n\t\tif (itemTypeId === null || itemTypeId === undefined) {\r\n\t\t\tthrow new Error('Required parameter itemTypeId was null or undefined when calling getItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/itemtypes/${encodeURIComponent(String(itemTypeId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all item types\r\n\t *\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemTypes(startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemTypeDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/itemtypes`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { PickListOptionDataWrapper } from '../model/pickListOptionDataWrapper';\r\nimport { RequestPickListOption } from '../model/requestPickListOption';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class PicklistoptionsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get the pick list option with the specified ID\r\n\t *\r\n\t * @param picklistOptionId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getPicklistOption(picklistOptionId: number, include?: Array<string>): Observable<PickListOptionDataWrapper> {\r\n\t\tif (picklistOptionId === null || picklistOptionId === undefined) {\r\n\t\t\tthrow new Error('Required parameter picklistOptionId was null or undefined when calling getPicklistOption.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/picklistoptions/${encodeURIComponent(String(picklistOptionId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the pick list option with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param picklistOptionId\r\n\t */\r\n\tpublic updatePicklistOption(body: RequestPickListOption, picklistOptionId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updatePicklistOption.');\r\n\t\t}\r\n\t\tif (picklistOptionId === null || picklistOptionId === undefined) {\r\n\t\t\tthrow new Error('Required parameter picklistOptionId was null or undefined when calling updatePicklistOption.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/picklistoptions/${encodeURIComponent(String(picklistOptionId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { PickListDataListWrapper } from '../model/pickListDataListWrapper';\r\nimport { PickListDataWrapper } from '../model/pickListDataWrapper';\r\nimport { PickListOptionDataListWrapper } from '../model/pickListOptionDataListWrapper';\r\nimport { RequestPickListOption } from '../model/requestPickListOption';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class PicklistsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new pick list option for the pick list with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param picklistId\r\n\t */\r\n\tpublic addPickListOptionToPickList(body: RequestPickListOption, picklistId: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addPickListOptionToPickList.');\r\n\t\t}\r\n\t\tif (picklistId === null || picklistId === undefined) {\r\n\t\t\tthrow new Error('Required parameter picklistId was null or undefined when calling addPickListOptionToPickList.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/picklists/${encodeURIComponent(String(picklistId))}/options`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the pick list with the specified ID\r\n\t *\r\n\t * @param picklistId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getPickList(picklistId: number, include?: Array<string>): Observable<PickListDataWrapper> {\r\n\t\tif (picklistId === null || picklistId === undefined) {\r\n\t\t\tthrow new Error('Required parameter picklistId was null or undefined when calling getPickList.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/picklists/${encodeURIComponent(String(picklistId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all pick list options for the pick list with the specified ID\r\n\t *\r\n\t * @param picklistId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getPickListOptions(picklistId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<PickListOptionDataListWrapper> {\r\n\t\tif (picklistId === null || picklistId === undefined) {\r\n\t\t\tthrow new Error('Required parameter picklistId was null or undefined when calling getPickListOptions.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/picklists/${encodeURIComponent(String(picklistId))}/options`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all pick lists\r\n\t *\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getPickLists(startAt?: number, maxResults?: number, include?: Array<string>): Observable<PickListDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/picklists`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { ItemTypeDataListWrapper } from '../model/itemTypeDataListWrapper';\r\nimport { ProjectDataListWrapper } from '../model/projectDataListWrapper';\r\nimport { ProjectDataWrapper } from '../model/projectDataWrapper';\r\nimport { RequestAttachment } from '../model/requestAttachment';\r\nimport { RequestProject } from '../model/requestProject';\r\nimport { TagDataListWrapper } from '../model/tagDataListWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class ProjectsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new project\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic addProject(body: RequestProject): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addProject.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/projects`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all item types for the project with the specified ID\r\n\t *\r\n\t * @param projectId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemTypesInProject(projectId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemTypeDataListWrapper> {\r\n\t\tif (projectId === null || projectId === undefined) {\r\n\t\t\tthrow new Error('Required parameter projectId was null or undefined when calling getItemTypesInProject.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/projects/${encodeURIComponent(String(projectId))}/itemtypes`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the project with the specified ID\r\n\t *\r\n\t * @param projectId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getProject(projectId: number, include?: Array<string>): Observable<ProjectDataWrapper> {\r\n\t\tif (projectId === null || projectId === undefined) {\r\n\t\t\tthrow new Error('Required parameter projectId was null or undefined when calling getProject.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/projects/${encodeURIComponent(String(projectId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all projects\r\n\t *\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getProjects(startAt?: number, maxResults?: number, include?: Array<string>): Observable<ProjectDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/projects`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all tags for the project with the specified ID\r\n\t *\r\n\t * @param projectId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagsInProject(projectId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TagDataListWrapper> {\r\n\t\tif (projectId === null || projectId === undefined) {\r\n\t\t\tthrow new Error('Required parameter projectId was null or undefined when calling getTagsInProject.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/projects/${encodeURIComponent(String(projectId))}/tags`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new attachment in the project with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param projectId\r\n\t */\r\n\tpublic postAttachment(body: RequestAttachment, projectId: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling postAttachment.');\r\n\t\t}\r\n\t\tif (projectId === null || projectId === undefined) {\r\n\t\t\tthrow new Error('Required parameter projectId was null or undefined when calling postAttachment.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/projects/${encodeURIComponent(String(projectId))}/attachments`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the project with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param projectId\r\n\t */\r\n\tpublic putProject(body: RequestProject, projectId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling putProject.');\r\n\t\t}\r\n\t\tif (projectId === null || projectId === undefined) {\r\n\t\t\tthrow new Error('Required parameter projectId was null or undefined when calling putProject.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/projects/${encodeURIComponent(String(projectId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { RelationshipDataListWrapper } from '../model/relationshipDataListWrapper';\r\nimport { RelationshipDataWrapper } from '../model/relationshipDataWrapper';\r\nimport { RequestRelationship } from '../model/requestRelationship';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class RelationshipsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing suspect link for the relationship with the specified ID\r\n\t *\r\n\t * @param relationshipId\r\n\t */\r\n\tpublic clearSuspectLink(relationshipId: number): Observable<AbstractRestResponse> {\r\n\t\tif (relationshipId === null || relationshipId === undefined) {\r\n\t\t\tthrow new Error('Required parameter relationshipId was null or undefined when calling clearSuspectLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/relationships/${encodeURIComponent(String(relationshipId))}/suspect`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new relationship\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic createRelationship(body: RequestRelationship): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling createRelationship.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/relationships`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the relationship with the specified ID\r\n\t *\r\n\t * @param relationshipId\r\n\t */\r\n\tpublic deleteRelationship(relationshipId: number): Observable<AbstractRestResponse> {\r\n\t\tif (relationshipId === null || relationshipId === undefined) {\r\n\t\t\tthrow new Error('Required parameter relationshipId was null or undefined when calling deleteRelationship.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/relationships/${encodeURIComponent(String(relationshipId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the relationship with the specified ID\r\n\t *\r\n\t * @param relationshipId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getRelationship(relationshipId: number, include?: Array<string>): Observable<RelationshipDataWrapper> {\r\n\t\tif (relationshipId === null || relationshipId === undefined) {\r\n\t\t\tthrow new Error('Required parameter relationshipId was null or undefined when calling getRelationship.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/relationships/${encodeURIComponent(String(relationshipId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all relationships in the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getRelationships(project: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/relationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the relationship with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param relationshipId\r\n\t */\r\n\tpublic updateRelationship(body: RequestRelationship, relationshipId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateRelationship.');\r\n\t\t}\r\n\t\tif (relationshipId === null || relationshipId === undefined) {\r\n\t\t\tthrow new Error('Required parameter relationshipId was null or undefined when calling updateRelationship.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/relationships/${encodeURIComponent(String(relationshipId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { RelationshipTypeDataListWrapper } from '../model/relationshipTypeDataListWrapper';\r\nimport { RelationshipTypeDataWrapper } from '../model/relationshipTypeDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class RelationshiptypesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get the relationship type with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param timestamp Get relationship type at this date and time. Requires ISO8601 formatting (milliseconds or seconds) - \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ\\&quot; or \\&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ\\&quot;\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getRelationshipType(id: number, timestamp?: string, include?: Array<string>): Observable<RelationshipTypeDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getRelationshipType.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (timestamp !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('timestamp', <any>timestamp);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/relationshiptypes/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all relationship types\r\n\t *\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getRelationshipTypes(startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipTypeDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/relationshiptypes`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { ReleaseDataListWrapper } from '../model/releaseDataListWrapper';\r\nimport { ReleaseDataWrapper } from '../model/releaseDataWrapper';\r\nimport { RequestRelease } from '../model/requestRelease';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class ReleasesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new release\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic addRelease(body: RequestRelease): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addRelease.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/releases`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the release with the specified ID\r\n\t *\r\n\t * @param releaseId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getRelease(releaseId: number, include?: Array<string>): Observable<ReleaseDataWrapper> {\r\n\t\tif (releaseId === null || releaseId === undefined) {\r\n\t\t\tthrow new Error('Required parameter releaseId was null or undefined when calling getRelease.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/releases/${encodeURIComponent(String(releaseId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all releases in the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getReleases(project: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ReleaseDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getReleases.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/releases`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the release with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param releaseId\r\n\t */\r\n\tpublic putRelease(body: RequestRelease, releaseId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling putRelease.');\r\n\t\t}\r\n\t\tif (releaseId === null || releaseId === undefined) {\r\n\t\t\tthrow new Error('Required parameter releaseId was null or undefined when calling putRelease.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/releases/${encodeURIComponent(String(releaseId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CrossOriginDomainWhiteList } from '../model/crossOriginDomainWhiteList';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class SystemService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Get the current CORS domain whitelist\r\n\t *\r\n\t */\r\n\tpublic getDomains(): Observable<CrossOriginDomainWhiteList> {\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/system/settings/corsdomains`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update CORS domain whitelist\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic setDomains(body: CrossOriginDomainWhiteList): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling setDomains.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/system/settings/corsdomains`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { ItemDataListWrapper } from '../model/itemDataListWrapper';\r\nimport { RequestTag } from '../model/requestTag';\r\nimport { TagDataListWrapper } from '../model/tagDataListWrapper';\r\nimport { TagDataWrapper } from '../model/tagDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class TagsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new tag in the project with the specified ID\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic addTagToProject(body: RequestTag): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addTagToProject.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/tags`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the tag with the specified ID\r\n\t *\r\n\t * @param id\r\n\t */\r\n\tpublic deleteTag(id: number): Observable<AbstractRestResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteTag.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/tags/${encodeURIComponent(String(id))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all items that have the tag with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemsUsingTag(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemsUsingTag.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/tags/${encodeURIComponent(String(id))}/items`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tag with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTag(id: number, include?: Array<string>): Observable<TagDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTag.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/tags/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all tags for the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagsInProject(project: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TagDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getTagsInProject.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/tags`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the tag with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic putTag(body: RequestTag, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling putTag.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling putTag.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/tags/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { RequestPatchOperation } from '../model/requestPatchOperation';\r\nimport { RequestTestCycle } from '../model/requestTestCycle';\r\nimport { TestCycleDataWrapper } from '../model/testCycleDataWrapper';\r\nimport { TestCycleTestGroupDataWrapper } from '../model/testCycleTestGroupDataWrapper';\r\nimport { TestRunDataListWrapper } from '../model/testRunDataListWrapper';\r\nimport { VersionDataListWrapper } from '../model/versionDataListWrapper';\r\nimport { VersionDataWrapper } from '../model/versionDataWrapper';\r\nimport { VersionedTestCycleDataWrapper } from '../model/versionedTestCycleDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class TestcyclesService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the test cycle with the specified ID, including the test runs in the test cycle\r\n\t *\r\n\t * @param testCycleId\r\n\t */\r\n\tpublic deleteTestCycle(testCycleId: number): Observable<AbstractRestResponse> {\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling deleteTestCycle.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the test cycle with the specified ID\r\n\t *\r\n\t * @param testCycleId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestCycle(testCycleId: number, include?: Array<string>): Observable<TestCycleDataWrapper> {\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling getTestCycle.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the test cycle test group for the test cycle with the specified ID\r\n\t *\r\n\t * @param testGroupId Get the test group with the specified ID\r\n\t * @param testCycleId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestCycleTestGroup(testGroupId: number, testCycleId: number, include?: Array<string>): Observable<TestCycleTestGroupDataWrapper> {\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling getTestCycleTestGroup.');\r\n\t\t}\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling getTestCycleTestGroup.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}/testgroup/${encodeURIComponent(String(testGroupId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all test runs for the test cycle with the specified ID\r\n\t *\r\n\t * @param testCycleId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestRuns(testCycleId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TestRunDataListWrapper> {\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling getTestRuns.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}/testruns`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the numbered version for the item with the specified ID\r\n\t *\r\n\t * @param versionNum\r\n\t * @param testCycleId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionOnItem3(versionNum: number, testCycleId: number, include?: Array<string>): Observable<VersionDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionOnItem3.');\r\n\t\t}\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling getVersionOnItem3.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}/versions/${encodeURIComponent(String(versionNum))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the  snapshot of the test cycle at the specified version\r\n\t *\r\n\t * @param versionNum\r\n\t * @param testCycleId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem3(versionNum: number, testCycleId: number, include?: Array<string>): Observable<VersionedTestCycleDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionedItem3.');\r\n\t\t}\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling getVersionedItem3.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}/versions/${encodeURIComponent(String(versionNum))}/versioneditem`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versions for the item with the specified ID\r\n\t *\r\n\t * @param testCycleId\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionsOnItem3(testCycleId: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionDataListWrapper> {\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling getVersionsOnItem3.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}/versions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the test cycle with the specified ID, including regenerating the test runs in the test cycle\r\n\t *\r\n\t * @param body\r\n\t * @param testCycleId\r\n\t */\r\n\tpublic patchTestCycle(body: Array<RequestPatchOperation>, testCycleId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling patchTestCycle.');\r\n\t\t}\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling patchTestCycle.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.patch<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the test cycle with the specified ID, including regenerating the test runs in the test cycle\r\n\t *\r\n\t * @param body\r\n\t * @param testCycleId\r\n\t */\r\n\tpublic updateTestCycle(body: RequestTestCycle, testCycleId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateTestCycle.');\r\n\t\t}\r\n\t\tif (testCycleId === null || testCycleId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCycleId was null or undefined when calling updateTestCycle.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testcycles/${encodeURIComponent(String(testCycleId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractItemDataListWrapper } from '../model/abstractItemDataListWrapper';\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { ActivityDataListWrapper } from '../model/activityDataListWrapper';\r\nimport { AttachmentDataListWrapper } from '../model/attachmentDataListWrapper';\r\nimport { CommentDataListWrapper } from '../model/commentDataListWrapper';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { ItemDataListWrapper } from '../model/itemDataListWrapper';\r\nimport { ItemDataWrapper } from '../model/itemDataWrapper';\r\nimport { LinkDataListWrapper } from '../model/linkDataListWrapper';\r\nimport { LinkDataWrapper } from '../model/linkDataWrapper';\r\nimport { LockDataWrapper } from '../model/lockDataWrapper';\r\nimport { RelationshipDataListWrapper } from '../model/relationshipDataListWrapper';\r\nimport { RequestArchivedStatus } from '../model/requestArchivedStatus';\r\nimport { RequestItemAttachment } from '../model/requestItemAttachment';\r\nimport { RequestItemTag } from '../model/requestItemTag';\r\nimport { RequestLink } from '../model/requestLink';\r\nimport { RequestLock } from '../model/requestLock';\r\nimport { RequestPatchOperation } from '../model/requestPatchOperation';\r\nimport { RequestTestCycle } from '../model/requestTestCycle';\r\nimport { RequestTestGroup } from '../model/requestTestGroup';\r\nimport { RequestTestGroupTestCase } from '../model/requestTestGroupTestCase';\r\nimport { RequestTestPlan } from '../model/requestTestPlan';\r\nimport { TagDataListWrapper } from '../model/tagDataListWrapper';\r\nimport { TagDataWrapper } from '../model/tagDataWrapper';\r\nimport { TestCycleDataListWrapper } from '../model/testCycleDataListWrapper';\r\nimport { TestGroupDataListWrapper } from '../model/testGroupDataListWrapper';\r\nimport { TestGroupDataWrapper } from '../model/testGroupDataWrapper';\r\nimport { TestPlanDataListWrapper } from '../model/testPlanDataListWrapper';\r\nimport { TestPlanDataWrapper } from '../model/testPlanDataWrapper';\r\nimport { VersionDataListWrapper } from '../model/versionDataListWrapper';\r\nimport { VersionDataWrapper } from '../model/versionDataWrapper';\r\nimport { VersionedTestPlanDataWrapper } from '../model/versionedTestPlanDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class TestplansService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing attachment to the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addAttachmentToItem(body: RequestItemAttachment, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addAttachmentToItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addAttachmentToItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/attachments`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new link for the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addItemLink(body: RequestLink, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/links`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing tag to the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addTagToItem(body: RequestItemTag, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addTagToItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addTagToItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/tags`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new test group to the test plan with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addTestGroup(body: RequestTestGroup, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addTestGroup.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addTestGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new test cycle\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic createTestCycle(body: RequestTestCycle, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling createTestCycle.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling createTestCycle.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testcycles`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new test plan\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic createTestPlan(body: RequestTestPlan): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling createTestPlan.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param id\r\n\t */\r\n\tpublic deleteItemLink(linkId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling deleteItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing test case from the test group\r\n\t *\r\n\t * @param testCaseId\r\n\t * @param testGroupId\r\n\t * @param id\r\n\t */\r\n\tpublic deleteTestCase(testCaseId: number, testGroupId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (testCaseId === null || testCaseId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCaseId was null or undefined when calling deleteTestCase.');\r\n\t\t}\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling deleteTestCase.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteTestCase.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}/testcases/${encodeURIComponent(String(testCaseId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the test group with the specified ID\r\n\t *\r\n\t * @param testGroupId\r\n\t * @param id\r\n\t */\r\n\tpublic deleteTestGroup(testGroupId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling deleteTestGroup.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteTestGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t */\r\n\tpublic deleteTestPlan(id: number): Observable<AbstractRestResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteTestPlan.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all activities for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getActivities(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ActivityDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getActivities.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/activities`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all attachments for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getAttachments(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AttachmentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getAttachments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/attachments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all downstream related items for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getDownstreamRelated(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AbstractItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getDownstreamRelated.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/downstreamrelated`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all downstream relationships for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getDownstreamRelationships(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getDownstreamRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/downstreamrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all comments for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param rootCommentsOnly\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemComments(id: number, startAt?: number, maxResults?: number, rootCommentsOnly?: boolean, include?: Array<string>): Observable<CommentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemComments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (rootCommentsOnly !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('rootCommentsOnly', <any>rootCommentsOnly);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/comments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all links for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemLinks(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<LinkDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemLinks.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/links`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLinkById(linkId: number, id: number, include?: Array<string>): Observable<LinkDataWrapper> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling getLinkById.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLinkById.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the locked state, last locked date, and last locked by user for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLock(id: number, include?: Array<string>): Observable<LockDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLock.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/lock`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tag with the specified ID\r\n\t *\r\n\t * @param tagId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagOnItem(tagId: number, id: number, include?: Array<string>): Observable<TagDataWrapper> {\r\n\t\tif (tagId === null || tagId === undefined) {\r\n\t\t\tthrow new Error('Required parameter tagId was null or undefined when calling getTagOnItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTagOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/tags/${encodeURIComponent(String(tagId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all tags for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagsOnItem(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TagDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTagsOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/tags`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the test case with the specified ID\r\n\t *\r\n\t * @param testCaseId\r\n\t * @param testGroupId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestCaseById(testCaseId: number, testGroupId: number, id: number, include?: Array<string>): Observable<ItemDataWrapper> {\r\n\t\tif (testCaseId === null || testCaseId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testCaseId was null or undefined when calling getTestCaseById.');\r\n\t\t}\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling getTestCaseById.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestCaseById.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}/testcases/${encodeURIComponent(String(testCaseId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all test cases associated with the test group with the specified ID\r\n\t *\r\n\t * @param testGroupId\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestCases(testGroupId: number, id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ItemDataListWrapper> {\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling getTestCases.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestCases.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}/testcases`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all test cycles for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestCycles(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TestCycleDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestCycles.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testcycles`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the test group with the specified ID\r\n\t *\r\n\t * @param testGroupId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestGroupById(testGroupId: number, id: number, include?: Array<string>): Observable<TestGroupDataWrapper> {\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling getTestGroupById.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestGroupById.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all test groups for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestGroups(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TestGroupDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestGroups.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestPlan(id: number, include?: Array<string>): Observable<TestPlanDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestPlan.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all test plans in the project with the specified ID\r\n\t *\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestPlans(project: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TestPlanDataListWrapper> {\r\n\t\tif (project === null || project === undefined) {\r\n\t\t\tthrow new Error('Required parameter project was null or undefined when calling getTestPlans.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all upstream related items for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUpstreamRelated(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AbstractItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getUpstreamRelated.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/upstreamrelated`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all upstream relationships for the test plan with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUpstreamRelationships(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getUpstreamRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/upstreamrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the numbered version for the item with the specified ID\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionOnItem4(versionNum: number, id: number, include?: Array<string>): Observable<VersionDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionOnItem4.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionOnItem4.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the  snapshot of the test plan at the specified version\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem4(versionNum: number, id: number, include?: Array<string>): Observable<VersionedTestPlanDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionedItem4.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionedItem4.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}/versioneditem`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versions for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionsOnItem4(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionsOnItem4.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/versions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the test plan with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic patchTestPlan(body: Array<RequestPatchOperation>, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling patchTestPlan.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling patchTestPlan.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.patch<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing test case to the test group with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param testGroupId\r\n\t * @param id\r\n\t */\r\n\tpublic postTestCase(body: RequestTestGroupTestCase, testGroupId: number, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling postTestCase.');\r\n\t\t}\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling postTestCase.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling postTestCase.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}/testcases`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing attachment from the item\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param id\r\n\t */\r\n\tpublic removeAttachmentFromItem(attachmentId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling removeAttachmentFromItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeAttachmentFromItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/attachments/${encodeURIComponent(String(attachmentId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing tag from the item with the specified ID\r\n\t *\r\n\t * @param tagId\r\n\t * @param id\r\n\t */\r\n\tpublic removeTagFromItem(tagId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (tagId === null || tagId === undefined) {\r\n\t\t\tthrow new Error('Required parameter tagId was null or undefined when calling removeTagFromItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeTagFromItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/tags/${encodeURIComponent(String(tagId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the archived status of the test plan\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic toggleArchivedStatus(body: RequestArchivedStatus, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling toggleArchivedStatus.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling toggleArchivedStatus.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/archived`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateItemLink(linkId: number, body: RequestLink, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the locked state of the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateLock(body: RequestLock, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateLock.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateLock.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/lock`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the test group with the specified ID\r\n\t *\r\n\t * @param testGroupId\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateTestGroup(testGroupId: number, body: RequestTestGroup, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (testGroupId === null || testGroupId === undefined) {\r\n\t\t\tthrow new Error('Required parameter testGroupId was null or undefined when calling updateTestGroup.');\r\n\t\t}\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateTestGroup.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateTestGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}/testgroups/${encodeURIComponent(String(testGroupId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the test plan with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateTestPlan(body: RequestTestPlan, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateTestPlan.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateTestPlan.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testplans/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractItemDataListWrapper } from '../model/abstractItemDataListWrapper';\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { ActivityDataListWrapper } from '../model/activityDataListWrapper';\r\nimport { AttachmentDataListWrapper } from '../model/attachmentDataListWrapper';\r\nimport { CommentDataListWrapper } from '../model/commentDataListWrapper';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { LinkDataListWrapper } from '../model/linkDataListWrapper';\r\nimport { LinkDataWrapper } from '../model/linkDataWrapper';\r\nimport { LockDataWrapper } from '../model/lockDataWrapper';\r\nimport { RelationshipDataListWrapper } from '../model/relationshipDataListWrapper';\r\nimport { RequestItemAttachment } from '../model/requestItemAttachment';\r\nimport { RequestItemTag } from '../model/requestItemTag';\r\nimport { RequestLink } from '../model/requestLink';\r\nimport { RequestLock } from '../model/requestLock';\r\nimport { RequestPatchOperation } from '../model/requestPatchOperation';\r\nimport { RequestTestRun } from '../model/requestTestRun';\r\nimport { TagDataListWrapper } from '../model/tagDataListWrapper';\r\nimport { TagDataWrapper } from '../model/tagDataWrapper';\r\nimport { TestRunDataListWrapper } from '../model/testRunDataListWrapper';\r\nimport { TestRunDataWrapper } from '../model/testRunDataWrapper';\r\nimport { VersionDataListWrapper } from '../model/versionDataListWrapper';\r\nimport { VersionDataWrapper } from '../model/versionDataWrapper';\r\nimport { VersionedTestRunDataWrapper } from '../model/versionedTestRunDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class TestrunsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.configuration.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing attachment to the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addAttachmentToItem(body: RequestItemAttachment, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addAttachmentToItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addAttachmentToItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/attachments`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new link for the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addItemLink(body: RequestLink, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/links`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing tag to the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addTagToItem(body: RequestItemTag, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addTagToItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addTagToItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/tags`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param id\r\n\t */\r\n\tpublic deleteItemLink(linkId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling deleteItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t */\r\n\tpublic deleteTestRun(id: number): Observable<AbstractRestResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteTestRun.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all activities for the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getActivities(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<ActivityDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getActivities.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/activities`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all attachments for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getAttachments(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AttachmentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getAttachments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/attachments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all downstream related items for the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getDownstreamRelated(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AbstractItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getDownstreamRelated.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/downstreamrelated`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all downstream relationships for the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getDownstreamRelationships(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getDownstreamRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/downstreamrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all comments for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param rootCommentsOnly\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemComments(id: number, startAt?: number, maxResults?: number, rootCommentsOnly?: boolean, include?: Array<string>): Observable<CommentDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemComments.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (rootCommentsOnly !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('rootCommentsOnly', <any>rootCommentsOnly);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/comments`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all links for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getItemLinks(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<LinkDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getItemLinks.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/links`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLinkById(linkId: number, id: number, include?: Array<string>): Observable<LinkDataWrapper> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling getLinkById.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLinkById.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the locked state, last locked date, and last locked by user for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getLock(id: number, include?: Array<string>): Observable<LockDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getLock.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/lock`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the tag with the specified ID\r\n\t *\r\n\t * @param tagId\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagOnItem(tagId: number, id: number, include?: Array<string>): Observable<TagDataWrapper> {\r\n\t\tif (tagId === null || tagId === undefined) {\r\n\t\t\tthrow new Error('Required parameter tagId was null or undefined when calling getTagOnItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTagOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/tags/${encodeURIComponent(String(tagId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all tags for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTagsOnItem(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TagDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTagsOnItem.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/tags`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestRun(id: number, include?: Array<string>): Observable<TestRunDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getTestRun.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Search for test runs associated with test cases, test plans, an test cycles\r\n\t * Must include at least one query parameter from testCycle, testCase, or testPlan\r\n\t * @param testCycle Filter by test runs in test cycle id\r\n\t * @param testCase Filter by test runs from test case id\r\n\t * @param testPlan Filter by test runs in test plan id\r\n\t * @param sortBy Sort orders can be added with the name of the field by which to sort, followed by .asc or .desc (e.g. &#39;name.asc&#39; or &#39;testCycle.desc&#39;). If not set, this defaults to documentKey.asc.\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getTestRuns(testCycle?: Array<number>, testCase?: Array<number>, testPlan?: Array<number>, sortBy?: Array<string>, startAt?: number, maxResults?: number, include?: Array<string>): Observable<TestRunDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (testCycle) {\r\n\t\t\ttestCycle.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('testCycle', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (testCase) {\r\n\t\t\ttestCase.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('testCase', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (testPlan) {\r\n\t\t\ttestPlan.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('testPlan', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (sortBy) {\r\n\t\t\tsortBy.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('sortBy', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all upstream related items for the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUpstreamRelated(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<AbstractItemDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getUpstreamRelated.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/upstreamrelated`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all upstream relationships for the test run with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUpstreamRelationships(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<RelationshipDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getUpstreamRelationships.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/upstreamrelationships`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the numbered version for the item with the specified ID\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionOnItem5(versionNum: number, id: number, include?: Array<string>): Observable<VersionDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionOnItem5.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionOnItem5.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the  snapshot of the test run at the specified version\r\n\t *\r\n\t * @param versionNum\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionedItem5(versionNum: number, id: number, include?: Array<string>): Observable<VersionedTestRunDataWrapper> {\r\n\t\tif (versionNum === null || versionNum === undefined) {\r\n\t\t\tthrow new Error('Required parameter versionNum was null or undefined when calling getVersionedItem5.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionedItem5.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/versions/${encodeURIComponent(String(versionNum))}/versioneditem`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all versions for the item with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getVersionsOnItem5(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<VersionDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getVersionsOnItem5.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/versions`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the current test run and then create a new test run based on the latest test case version.\r\n\t *\r\n\t * @param id\r\n\t */\r\n\tpublic makeTestRunCurrent(id: number): Observable<CreatedResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling makeTestRunCurrent.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/updatedtestcase`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the execution results for the test run with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic patchTestRun(body: Array<RequestPatchOperation>, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling patchTestRun.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling patchTestRun.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.patch<any>(`${this.configuration.basePath.replace(\"latest\", \"labs\").replace(\"v1\", \"labs\")}/testruns/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing attachment from the item\r\n\t *\r\n\t * @param attachmentId\r\n\t * @param id\r\n\t */\r\n\tpublic removeAttachmentFromItem(attachmentId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (attachmentId === null || attachmentId === undefined) {\r\n\t\t\tthrow new Error('Required parameter attachmentId was null or undefined when calling removeAttachmentFromItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeAttachmentFromItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/attachments/${encodeURIComponent(String(attachmentId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing tag from the item with the specified ID\r\n\t *\r\n\t * @param tagId\r\n\t * @param id\r\n\t */\r\n\tpublic removeTagFromItem(tagId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (tagId === null || tagId === undefined) {\r\n\t\t\tthrow new Error('Required parameter tagId was null or undefined when calling removeTagFromItem.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeTagFromItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/tags/${encodeURIComponent(String(tagId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the link with the specified ID\r\n\t *\r\n\t * @param linkId\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateItemLink(linkId: number, body: RequestLink, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (linkId === null || linkId === undefined) {\r\n\t\t\tthrow new Error('Required parameter linkId was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateItemLink.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/links/${encodeURIComponent(String(linkId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the locked state of the item with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateLock(body: RequestLock, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateLock.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateLock.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}/lock`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the execution results for the test run with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateTestRun(body: RequestTestRun, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateTestRun.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateTestRun.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/testruns/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { RequestGroupUser } from '../model/requestGroupUser';\r\nimport { RequestUserGroup } from '../model/requestUserGroup';\r\nimport { UserDataListWrapper } from '../model/userDataListWrapper';\r\nimport { UserGroupDataListWrapper } from '../model/userGroupDataListWrapper';\r\nimport { UserGroupDataWrapper } from '../model/userGroupDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class UsergroupsService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new user group\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic addUserGroup(body: RequestUserGroup): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addUserGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/usergroups`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add an existing user to the user group with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic addUserToGroup(body: RequestGroupUser, id: number): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addUserToGroup.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling addUserToGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/usergroups/${encodeURIComponent(String(id))}/users`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete the user group with the specified ID\r\n\t *\r\n\t * @param id\r\n\t */\r\n\tpublic deleteItem(id: number): Observable<AbstractRestResponse> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling deleteItem.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/usergroups/${encodeURIComponent(String(id))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the user group with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getGroup(id: number, include?: Array<string>): Observable<UserGroupDataWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getGroup.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/usergroups/${encodeURIComponent(String(id))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all users for the user group with the specified ID\r\n\t *\r\n\t * @param id\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getGroupUsers(id: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<UserDataListWrapper> {\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling getGroupUsers.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/usergroups/${encodeURIComponent(String(id))}/users`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all user groups\r\n\t *\r\n\t * @param project\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUsers(project?: number, startAt?: number, maxResults?: number, include?: Array<string>): Observable<UserGroupDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (project !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('project', <any>project);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/usergroups`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an existing user from the user group with the specified ID\r\n\t *\r\n\t * @param userId\r\n\t * @param id\r\n\t */\r\n\tpublic removeUserFromGroup(userId: number, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (userId === null || userId === undefined) {\r\n\t\t\tthrow new Error('Required parameter userId was null or undefined when calling removeUserFromGroup.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling removeUserFromGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.delete<any>(`${this.configuration.basePath}/usergroups/${encodeURIComponent(String(id))}/users/${encodeURIComponent(String(userId))}`, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the user group with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param id\r\n\t */\r\n\tpublic updateUserGroup(body: RequestUserGroup, id: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling updateUserGroup.');\r\n\t\t}\r\n\t\tif (id === null || id === undefined) {\r\n\t\t\tthrow new Error('Required parameter id was null or undefined when calling updateUserGroup.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/usergroups/${encodeURIComponent(String(id))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Jama REST API\r\n * This is the documentation for the Jama REST API.\r\n *\r\n * OpenAPI spec version: latest\r\n *\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\n/* tslint:disable:no-unused-variable member-ordering */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport '../rxjs-operators';\r\n\r\nimport { AbstractRestResponse } from '../model/abstractRestResponse';\r\nimport { CreatedResponse } from '../model/createdResponse';\r\nimport { FilterDataListWrapper } from '../model/filterDataListWrapper';\r\nimport { RequestActiveStatus } from '../model/requestActiveStatus';\r\nimport { RequestUser } from '../model/requestUser';\r\nimport { UserDataListWrapper } from '../model/userDataListWrapper';\r\nimport { UserDataWrapper } from '../model/userDataWrapper';\r\n\r\nimport { BASE_PATH } from '../variables';\r\nimport { Configuration } from '../configuration';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n\tprotected basePath = '';\r\n\tpublic defaultHeaders = new HttpHeaders();\r\n\tpublic configuration = new Configuration();\r\n\r\n\tconstructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\r\n\t\tif (basePath) {\r\n\t\t\tthis.basePath = basePath;\r\n\t\t}\r\n\t\tif (configuration) {\r\n\t\t\tthis.configuration = configuration;\r\n\t\t\tthis.basePath = basePath || configuration.basePath || this.basePath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param consumes string[] mime-types\r\n\t * @return true: consumes contains 'multipart/form-data', false: otherwise\r\n\t */\r\n\tprivate canConsumeForm(consumes: string[]): boolean {\r\n\t\tconst form = 'multipart/form-data';\r\n\t\tfor (let consume of consumes) {\r\n\t\t\tif (form === consume) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isJsonMime(mime: string): boolean {\r\n\t\tconst jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n\t\treturn mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new user\r\n\t *\r\n\t * @param body\r\n\t */\r\n\tpublic addUser(body: RequestUser): Observable<CreatedResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling addUser.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.post<any>(`${this.configuration.basePath}/users`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current user\r\n\t *\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getCurrentUser(include?: Array<string>): Observable<UserDataWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/users/current`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current user&#39;s favorite filters\r\n\t *\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getFavoriteFiltersForCurrentUser(startAt?: number, maxResults?: number, include?: Array<string>): Observable<FilterDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/users/current/favoritefilters`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get the user with the specified ID\r\n\t *\r\n\t * @param userId\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUser(userId: number, include?: Array<string>): Observable<UserDataWrapper> {\r\n\t\tif (userId === null || userId === undefined) {\r\n\t\t\tthrow new Error('Required parameter userId was null or undefined when calling getUser.');\r\n\t\t}\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/users/${encodeURIComponent(String(userId))}`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get all users\r\n\t *\r\n\t * @param username\r\n\t * @param email\r\n\t * @param firstName\r\n\t * @param lastName\r\n\t * @param includeInactive\r\n\t * @param startAt\r\n\t * @param maxResults If not set, this defaults to 20. This cannot be larger than 50\r\n\t * @param include Links to include as full objects in the linked map\r\n\t */\r\n\tpublic getUsers(username?: string, email?: string, firstName?: string, lastName?: string, includeInactive?: boolean, startAt?: number, maxResults?: number, include?: Array<string>): Observable<UserDataListWrapper> {\r\n\r\n\t\tlet queryParameters = new HttpParams();\r\n\t\tif (username !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('username', <any>username);\r\n\t\t}\r\n\t\tif (email !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('email', <any>email);\r\n\t\t}\r\n\t\tif (firstName !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('firstName', <any>firstName);\r\n\t\t}\r\n\t\tif (lastName !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('lastName', <any>lastName);\r\n\t\t}\r\n\t\tif (includeInactive !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('includeInactive', <any>includeInactive);\r\n\t\t}\r\n\t\tif (startAt !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('startAt', <any>startAt);\r\n\t\t}\r\n\t\tif (maxResults !== undefined) {\r\n\t\t\tqueryParameters = queryParameters.set('maxResults', <any>maxResults);\r\n\t\t}\r\n\t\tif (include) {\r\n\t\t\tinclude.forEach((element) => {\r\n\t\t\t\tqueryParameters = queryParameters.append('include', <any>element);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.get<any>(`${this.configuration.basePath}/users`, {\r\n\t\t\tparams:          queryParameters,\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the user with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param userId\r\n\t */\r\n\tpublic putUser(body: RequestUser, userId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling putUser.');\r\n\t\t}\r\n\t\tif (userId === null || userId === undefined) {\r\n\t\t\tthrow new Error('Required parameter userId was null or undefined when calling putUser.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/users/${encodeURIComponent(String(userId))}`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update the active status for the user with the specified ID\r\n\t *\r\n\t * @param body\r\n\t * @param userId\r\n\t */\r\n\tpublic setActiveStatus(body: RequestActiveStatus, userId: number): Observable<AbstractRestResponse> {\r\n\t\tif (body === null || body === undefined) {\r\n\t\t\tthrow new Error('Required parameter body was null or undefined when calling setActiveStatus.');\r\n\t\t}\r\n\t\tif (userId === null || userId === undefined) {\r\n\t\t\tthrow new Error('Required parameter userId was null or undefined when calling setActiveStatus.');\r\n\t\t}\r\n\r\n\t\tlet headers = this.defaultHeaders;\r\n\r\n\t\t// authentication (basic) required\r\n\t\tif (this.configuration.username || this.configuration.password) {\r\n\t\t\theaders = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\r\n\t\t}\r\n\r\n\t\t// authentication (oauth2) required\r\n\t\tif (this.configuration.accessToken) {\r\n\t\t\tlet accessToken = typeof this.configuration.accessToken === 'function'\r\n\t\t\t\t? this.configuration.accessToken()\r\n\t\t\t\t: this.configuration.accessToken;\r\n\t\t\theaders = headers.set('Authorization', 'Bearer ' + accessToken);\r\n\t\t}\r\n\r\n\t\treturn this.httpClient.put<any>(`${this.configuration.basePath}/users/${encodeURIComponent(String(userId))}/active`, body, {\r\n\t\t\theaders:         headers,\r\n\t\t\twithCredentials: this.configuration.withCredentials,\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","export interface ConfigurationParameters {\r\n\tapiKeys?: { [ key: string ]: string };\r\n\tusername?: string;\r\n\tpassword?: string;\r\n\taccessToken?: string | (() => string);\r\n\tbasePath?: string;\r\n\twithCredentials?: boolean;\r\n}\r\n\r\nexport class Configuration {\r\n\tapiKeys?: { [ key: string ]: string };\r\n\tusername?: string;\r\n\tpassword?: string;\r\n\taccessToken?: string | (() => string);\r\n\tbasePath?: string;\r\n\twithCredentials?: boolean;\r\n\r\n\tconstructor(configurationParameters: ConfigurationParameters = {}) {\r\n\t\tthis.apiKeys = configurationParameters.apiKeys;\r\n\t\tthis.username = configurationParameters.username;\r\n\t\tthis.password = configurationParameters.password;\r\n\t\tthis.accessToken = configurationParameters.accessToken;\r\n\t\tthis.basePath = configurationParameters.basePath;\r\n\t\tthis.withCredentials = configurationParameters.withCredentials;\r\n\t}\r\n}\r\n","export * from './api/api';\r\nexport * from './model/models';\r\nexport * from './variables';\r\nexport * from './configuration';\r\nexport * from './api.module';","// RxJS imports according to https://angular.io/docs/ts/latest/guide/server-communication.html#!#rxjs\r\n\r\n// See node_module/rxjs/Rxjs.js\r\n// Import just the rxjs statics and operators we need for THIS app.\r\n\r\n// Statics\r\n\r\n// Operators\r\n\r\n\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BASE_PATH = new InjectionToken<string>('basePath');\r\nexport const COLLECTION_FORMATS = {\r\n\t'csv':   ',',\r\n\t'tsv':   '   ',\r\n\t'ssv':   ' ',\r\n\t'pipes': '|'\r\n}\r\n","export class ProjectData {\r\n\tid: number;\r\n\tprojectKey: string;\r\n\tname: string;\r\n}\r\n","export class ReleaseData {\r\n\tid: number;\r\n\tname: string;\r\n}\r\n","export class TestCycleData {\r\n\tid: number;\r\n\tname: string;\r\n}\r\n","export class TestGroupData {\r\n\tid: number;\r\n\tname: string;\r\n}\r\n","export class TestPlanData {\r\n\tid: number;\r\n\tname: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Step, TestCase } from '../model/allure-test-case.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TestCaseService {\r\n\r\n\tstatic STEP_TYPE_EXPECTED_RESULT = 'Expected result:';\r\n\tstatic STEP_TYPE_ACTION = 'Action:';\r\n\r\n\tpublic getTmsLink(testCase: TestCase): string {\r\n\t\tif (testCase.links) {\r\n\t\t\tconst link = testCase.links.find((l) => l.type === 'tms');\r\n\t\t\treturn link ? link.name : '';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic getTmsDescription(testCase: TestCase): string {\r\n\t\tif (testCase.labels) {\r\n\t\t\tconst label = testCase.labels.find((l) => l.name === 'feature');\r\n\t\t\treturn label ? label.value : '';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic getActualResults(testCase: TestCase): string {\r\n\t\tif (testCase.labels) {\r\n\t\t\tconst label = testCase.labels.find((l) => l.name === 'actualResults');\r\n\t\t\treturn label ? label.value : '';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\tpublic followTestCaseStructure(elementSteps: Step[], level: number, isFirstStep: boolean, parentStep ?: Step): Step[] {\r\n\t\tconst steps: Step[] = [];\r\n\r\n\t\tfor (let j = 0; elementSteps && j < elementSteps.length; j++) {\r\n\t\t\tlet isActionResult = false;\r\n\t\t\tlet stepName = elementSteps[j].name;\r\n\r\n\t\t\t// Set isActionResult and Replace Action: and Expected result:\r\n\t\t\tif (elementSteps[j].expectedResult || stepName.includes(TestCaseService.STEP_TYPE_EXPECTED_RESULT)) {\r\n\t\t\t\tisActionResult = false;\r\n\t\t\t\tstepName = stepName.replace(TestCaseService.STEP_TYPE_EXPECTED_RESULT, '');\r\n\t\t\t} else {\r\n\t\t\t\tif (stepName && (elementSteps[j].isAction || stepName.includes(TestCaseService.STEP_TYPE_ACTION))) {\r\n\t\t\t\t\tisActionResult = true;\r\n\t\t\t\t\tstepName = stepName.replace(TestCaseService.STEP_TYPE_ACTION, '');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isFirstStep && j === 0) {\r\n\t\t\t\tsteps.push(this.addNewStep(elementSteps[j], stepName, level, isActionResult));\r\n\t\t\t} else {\r\n\t\t\t\tconst previousOrParentStep = steps.length > 0 ? steps[steps.length - 1] : parentStep;\r\n\r\n\t\t\t\tif (isActionResult) {\t\t// Current step is an Action\r\n\t\t\t\t\tif (previousOrParentStep.expectedResult) { // Create a new Step for the Action\r\n\t\t\t\t\t\tsteps.push(this.addNewStep(elementSteps[j], stepName, level, isActionResult));\r\n\t\t\t\t\t} else { // Add the action to the previous Step\r\n\t\t\t\t\t\tpreviousOrParentStep.action = previousOrParentStep.action ? previousOrParentStep.action + this.addStepSeparator(stepName, level) : stepName;\r\n\t\t\t\t\t\tif (elementSteps[j].steps && elementSteps[j].steps.length > 0) {\r\n\t\t\t\t\t\t\tconst subSteps: Step[] = this.followTestCaseStructure(elementSteps[j].steps, level + 1, false, previousOrParentStep);\r\n\t\t\t\t\t\t\tpreviousOrParentStep.steps = subSteps;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // Current Step is an Expected Result\r\n\t\t\t\t\tif (previousOrParentStep.expectedResult) {\r\n\t\t\t\t\t\tsteps.push(this.addNewStep(elementSteps[j], stepName, level, isActionResult));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpreviousOrParentStep.expectedResult = stepName;\r\n\t\t\t\t\t\tif (elementSteps[j].steps && elementSteps[j].steps.length > 0) {\r\n\t\t\t\t\t\t\tconst subSteps: Step[] = this.followTestCaseStructure(elementSteps[j].steps, level + 1, false, previousOrParentStep);\r\n\t\t\t\t\t\t\tpreviousOrParentStep.steps = subSteps;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn steps;\r\n\t}\r\n\r\n\tprivate addStepSeparator(stepName: string, level: number): string {\r\n\t\tconst rightMargin = 2 * (level + 1);\r\n\t\treturn '<div class=\"ml-' + rightMargin + '\">' + stepName + '</div>';\r\n\t}\r\n\r\n\tprivate addNewStep(elementStep: Step, stepName: string, level: number, isActionResult: boolean): Step {\r\n\t\tconst step: Step = {\r\n\t\t\tname:           '',\r\n\t\t\taction:         isActionResult ? this.addStepSeparator(stepName, level) : undefined,\r\n\t\t\texpectedResult: isActionResult ? undefined : stepName,\r\n\t\t\tstatus:         elementStep.status,\r\n\t\t\tstatusDetails:  undefined,\r\n\t\t\tstage:          '',\r\n\t\t\tstart:          Number(elementStep.start),\r\n\t\t\tstop:           Number(elementStep.stop),\r\n\t\t\tparameters:     [],\r\n\t\t\tsteps:          [],\r\n\t\t\tnumberOfStep:   '',\r\n\t\t\tisAction:       isActionResult\r\n\t\t};\r\n\t\tif (elementStep.steps && elementStep.steps.length > 0) {\r\n\t\t\tstep.steps = this.followTestCaseStructure(elementStep.steps, level + 1, false, step);\r\n\t\t}\r\n\t\treturn step;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TestCaseService } from './test-case.service';\r\nimport { Label, Step, TestCase, TestSuite } from '../model/allure-test-case.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class TestSuiteService {\r\n\r\n\tconstructor(protected testCaseService: TestCaseService) {\r\n\t}\r\n\r\n\tpublic parseFromDocument(xmlDocument: Document): TestSuite {\r\n\t\tconst testSuite = {\r\n\t\t\tid:        undefined,\r\n\t\t\tname:      undefined,\r\n\t\t\tactualResults: undefined,\r\n\t\t\ttestCases: []\r\n\t\t};\r\n\r\n\t\tconst elementTestcases = xmlDocument.getElementsByTagName('test-cases')[0].getElementsByTagName('test-case');\r\n\r\n\t\tfor (let i = 0; i < elementTestcases.length; i++) {\r\n\t\t\tconst testCaseStatus = elementTestcases[i].getAttribute('status');\r\n\t\t\tconst testCase: TestCase = {\r\n\t\t\t\tuuid:        elementTestcases[i].getElementsByTagName('name')[0].childNodes[0].nodeValue,\r\n\t\t\t\thistoryId:   '',\r\n\t\t\t\tlabels:      this.parseLabels(elementTestcases[i]),\r\n\t\t\t\tlinks:       [],\r\n\t\t\t\tname:        elementTestcases[i].getElementsByTagName('name')[0].childNodes[0].nodeValue,\r\n\t\t\t\tstatus:      testCaseStatus,\r\n\t\t\t\tstage:       '',\r\n\t\t\t\tdescription: elementTestcases[i].getElementsByTagName('title')[0].childNodes[0].nodeValue,\r\n\t\t\t\tstart:       Number(elementTestcases[i].getAttribute('start')),\r\n\t\t\t\tstop:        Number(elementTestcases[i].getAttribute('stop')),\r\n\t\t\t\tsteps:       this.parseSteps(elementTestcases[i], testCaseStatus)\r\n\t\t\t};\r\n\r\n\t\t\tif (testCase.steps.length === 0) {\r\n\t\t\t\ttestCase.steps.push(this.createEmptyStep(elementTestcases[i]));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const label of testCase.labels) {\r\n\t\t\t\tif (testSuite.id === undefined && label.name === 'tms') {\r\n\t\t\t\t\ttestSuite.id = label.value;\r\n\t\t\t\t}\r\n\t\t\t\tif (testSuite.name === undefined && label.name === 'feature') {\r\n\t\t\t\t\ttestSuite.name = label.value;\r\n\t\t\t\t}\r\n\t\t\t\tif (!testSuite.actualResults && label.name === 'actualResults') {\r\n\t\t\t\t\ttestSuite.actualResults = label.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.addTestCaseToTestSuite(testCase, testSuite);\r\n\t\t}\r\n\t\tif (!testSuite.id) {\r\n\t\t\ttestSuite.id = xmlDocument.getElementsByTagName('name')[0].childNodes[0].nodeValue;\r\n\t\t}\r\n\t\tif (!testSuite.name) {\r\n\t\t\ttestSuite.name = xmlDocument.getElementsByTagName('title')[0].childNodes[0].nodeValue;\r\n\t\t}\r\n\t\treturn testSuite;\r\n\t}\r\n\r\n\tprivate createEmptyStep(testCase): Step {\r\n\t\tconst step: Step = {\r\n\t\t\tname:           '',\r\n\t\t\taction:         '',\r\n\t\t\texpectedResult: '',\r\n\t\t\tstatus:         testCase.getAttribute('status'),\r\n\t\t\tstatusDetails:  undefined,\r\n\t\t\tstage:          '',\r\n\t\t\tstart:          Number(testCase.getAttribute('start')),\r\n\t\t\tstop:           Number(testCase.getAttribute('stop')),\r\n\t\t\tparameters:     [],\r\n\t\t\tsteps:          [],\r\n\t\t\tnumberOfStep:   '',\r\n\t\t\tisAction:       true\r\n\t\t};\r\n\t\treturn step;\r\n\t}\r\n\r\n\tprivate queryDirectChildren(parent, selector) {\r\n\t\tconst nodes = parent.querySelectorAll(selector);\r\n\t\tconst filteredNodes = [].slice.call(nodes)\r\n\t\t\t.filter(n =>\r\n\t\t\t\tn.parentNode.closest(selector) === parent.closest(selector)\r\n\t\t\t);\r\n\t\treturn filteredNodes;\r\n\t}\r\n\r\n\tpublic getStepStatus(currentStatus: string, testCaseStatus: string): string {\r\n\t\tif ('failed' === testCaseStatus) {\r\n\t\t\treturn testCaseStatus;\r\n\t\t}\r\n\t\treturn currentStatus;\r\n\t}\r\n\r\n\tprivate parseSteps(parent: Element, testCaseStatus: string): Step[] {\r\n\t\tconst steps: Step[] = [];\r\n\t\tconst elementSteps = this.queryDirectChildren(parent.getElementsByTagName('steps')[0], 'step');\r\n\t\tfor (let i = 0; i < elementSteps.length; i++) {\r\n\t\t\tconst step: Step = {\r\n\t\t\t\tname:           elementSteps[i].getElementsByTagName('name')[0].childNodes[0].nodeValue,\r\n\t\t\t\taction:         '',\r\n\t\t\t\texpectedResult: '',\r\n\t\t\t\tstatus:         this.getStepStatus(elementSteps[i].getAttribute('status'), testCaseStatus),\r\n\t\t\t\tstatusDetails:  undefined,\r\n\t\t\t\tstage:          '',\r\n\t\t\t\tstart:          Number(elementSteps[i].getAttribute('start')),\r\n\t\t\t\tstop:           Number(elementSteps[i].getAttribute('stop')),\r\n\t\t\t\tparameters:     [],\r\n\t\t\t\tsteps:          [],\r\n\t\t\t\tnumberOfStep:   '',\r\n\t\t\t\tisAction:       false\r\n\t\t\t};\r\n\t\t\tif (elementSteps[i].getElementsByTagName('steps').length > 0) {\r\n\t\t\t\tstep.steps = this.parseSteps(elementSteps[i], testCaseStatus);\r\n\t\t\t}\r\n\t\t\tsteps.push(step);\r\n\t\t}\r\n\t\treturn steps;\r\n\t}\r\n\r\n\tprivate parseLabels(parent: Element): Label[] {\r\n\t\tconst labels: Label[] = [];\r\n\r\n\t\tconst elementLabels = parent.getElementsByTagName('labels')[0].getElementsByTagName('label');\r\n\r\n\t\tfor (let i = 0; i < elementLabels.length; i++) {\r\n\t\t\tconst label: Label = {\r\n\t\t\t\tname:  elementLabels[i].getAttribute('name'),\r\n\t\t\t\tvalue: elementLabels[i].getAttribute('value')\r\n\t\t\t};\r\n\t\t\tlabels.push(label);\r\n\t\t}\r\n\t\treturn labels;\r\n\t}\r\n\r\n\tpublic addTestCaseToTestSuite(testCase: TestCase, testSuite: TestSuite) {\r\n\r\n\t\tconst index = testSuite.testCases.findIndex((tc) => tc.uuid === testCase.uuid);\r\n\t\tif (index !== -1) {\r\n\t\t\ttestSuite.testCases[index] = testCase;\r\n\t\t} else {\r\n\t\t\ttestCase.steps = this.testCaseService.followTestCaseStructure(testCase.steps, 0, true);\r\n\t\t\ttestSuite.testCases.push(testCase);\r\n\t\t\ttestSuite.testCases.sort((a, b) => (this.testCaseService.getTmsLink(a) > this.testCaseService.getTmsLink(b) ? -1 : 1));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getStatus(testSuite: TestSuite) {\r\n\t\tif (testSuite.testCases.length === 0) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tfor (let i = 0; i < testSuite.testCases.length; i++) {\r\n\t\t\tif (testSuite.testCases[i].status === 'failed') {\r\n\t\t\t\treturn 'failed';\r\n\t\t\t}\r\n\t\t\tif (testSuite.testCases[i].status === 'blocked') {\r\n\t\t\t\treturn 'blocked';\r\n\t\t\t}\r\n\t\t\tif (testSuite.testCases[i].status !== 'passed' && testSuite.testCases[i].status !== 'pending') {\r\n\t\t\t\treturn testSuite.testCases[i].status;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 'passed';\r\n\t}\r\n\r\n\tpublic getActualResults(testSuite: TestSuite, actualResultsFromUI: string) {\r\n\t\treturn ['<p>', testSuite.actualResults, '<br />', actualResultsFromUI, '</p>'].join('')\r\n\t\t\t.replace(/\\n/g,  '<br />')\r\n\t\t\t.replace(/\\t/g, '&nbsp;');\r\n\t}\r\n\r\n\tpublic getTestCasesSummary(testSuite: TestSuite): string {\r\n\t\tlet data = '<p>Tested actions are:</p>';\r\n\t\tdata += '<p>&nbsp;</p>';\r\n\r\n\t\tdata += '<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:100%\">';\r\n\t\tdata += '<tbody>';\r\n\r\n\t\ttestSuite.testCases.forEach((tc) => {\r\n\t\t\tdata += '<tr>';\r\n\t\t\tdata += '\t<td><strong>' + tc.name + '</strong></td>';\r\n\t\t\tdata += ' <td>' + tc.description + '</td>';\r\n\t\t\tdata += '</tr>';\r\n\t\t});\r\n\r\n\t\tdata += '</tbody>';\r\n\t\tdata += '</table>';\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tpublic getTestCaseStepsToUpdate(testSuite: TestSuite): any {\r\n\t\tconst testCaseSteps = [];\r\n\t\tif (testSuite.testCases) {\r\n\t\t\ttestSuite.testCases.forEach((testCase) => {\r\n\t\t\t\tif (testCase.steps && testCase.steps.length > 0) {\r\n\t\t\t\t\t\tthis.getStepsToUpdate(testCaseSteps, testCase.steps, testCase.description);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttestCaseSteps.push({\r\n\t\t\t\t\t\t'action':         testCase.description,\r\n\t\t\t\t\t\t'expectedResult': ''\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn testCaseSteps;\r\n\t}\r\n\r\n\tprivate getStepsToUpdate(testCaseSteps: any[], steps: Step[], stepName?: string): any {\r\n\t\tsteps.forEach((step, index) => {\r\n\t\t\ttestCaseSteps.push({\r\n\t\t\t\t'action':         (stepName && index === 0 ? stepName : '') + (step.action ? step.action : ''),\r\n\t\t\t\t'expectedResult': step.expectedResult\r\n\t\t\t});\r\n\t\t\tif (step.steps && step.steps.length > 0) {\r\n\t\t\t\tthis.getStepsToUpdate(testCaseSteps, step.steps);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn testCaseSteps;\r\n\t}\r\n\r\n\tpublic getDescription(description: string): string {\r\n\t\tif (description) {\r\n\t\t\treturn description.replace(/\\n/g,  '<br />')\r\n\t\t\t\t.replace(/\\t/g, '&nbsp;');\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  jamaUrl : 'https://testjama.systelab.net/contour/rest/v1'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}